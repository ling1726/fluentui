diff --git a/node_modules/@griffel/core/__styles.cjs.js.map b/node_modules/@griffel/core/__styles.cjs.js.map
index bd05b14..1fdfbeb 100644
--- a/node_modules/@griffel/core/__styles.cjs.js.map
+++ b/node_modules/@griffel/core/__styles.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"__styles.cjs.js","sources":["../../../packages/core/src/__styles.ts"],"sourcesContent":["import { reduceToClassNameForSlots } from './runtime/reduceToClassNameForSlots';\nimport { MakeStylesOptions, CSSClassesMapBySlot, CSSRulesByBucket } from './types';\n\n/**\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms.\n *\n * @internal\n */\nexport function __styles<Slots extends string>(\n  classesMapBySlot: CSSClassesMapBySlot<Slots>,\n  cssRules: CSSRulesByBucket,\n) {\n  const insertionCache: Record<string, boolean> = {};\n\n  let ltrClassNamesForSlots: Record<Slots, string> | null = null;\n  let rtlClassNamesForSlots: Record<Slots, string> | null = null;\n\n  function computeClasses(options: Pick<MakeStylesOptions, 'dir' | 'renderer'>): Record<Slots, string> {\n    const { dir, renderer } = options;\n\n    const isLTR = dir === 'ltr';\n    // As RTL classes are different they should have a different cache key for insertion\n    const rendererId = isLTR ? renderer.id : renderer.id + 'r';\n\n    if (isLTR) {\n      if (ltrClassNamesForSlots === null) {\n        ltrClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    } else {\n      if (rtlClassNamesForSlots === null) {\n        rtlClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    }\n\n    if (insertionCache[rendererId] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[rendererId] = true;\n    }\n\n    return isLTR ? (ltrClassNamesForSlots as Record<Slots, string>) : (rtlClassNamesForSlots as Record<Slots, string>);\n  }\n\n  return computeClasses;\n}\n"],"names":["__styles","classesMapBySlot","cssRules","insertionCache","ltrClassNamesForSlots","rtlClassNamesForSlots","computeClasses","options","dir","renderer","isLTR","rendererId","id","reduceToClassNameForSlots","undefined","insertCSSRules"],"mappings":";;;;;;AAGA;;;;;;SAKgBA,SACdC,kBACAC;AAEA,QAAMC,cAAc,GAA4B,EAAhD;AAEA,MAAIC,qBAAqB,GAAiC,IAA1D;AACA,MAAIC,qBAAqB,GAAiC,IAA1D;;AAEA,WAASC,cAAT,CAAwBC,OAAxB;AACE,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAoBF,OAA1B;AAEA,UAAMG,KAAK,GAAGF,GAAG,KAAK,KAAtB;;AAEA,UAAMG,UAAU,GAAGD,KAAK,GAAGD,QAAQ,CAACG,EAAZ,GAAiBH,QAAQ,CAACG,EAAT,GAAc,GAAvD;;AAEA,QAAIF,KAAJ,EAAW;AACT,UAAIN,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGS,mDAAyB,CAACZ,gBAAD,EAAmBO,GAAnB,CAAjD;AACD;AACF,KAJD,MAIO;AACL,UAAIH,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGQ,mDAAyB,CAACZ,gBAAD,EAAmBO,GAAnB,CAAjD;AACD;AACF;;AAED,QAAIL,cAAc,CAACQ,UAAD,CAAd,KAA+BG,SAAnC,EAA8C;AAC5CL,MAAAA,QAAQ,CAACM,cAAT,CAAwBb,QAAxB;AACAC,MAAAA,cAAc,CAACQ,UAAD,CAAd,GAA6B,IAA7B;AACD;;AAED,WAAOD,KAAK,GAAIN,qBAAJ,GAAuDC,qBAAnE;AACD;;AAED,SAAOC,cAAP;AACD;;;;"}
\ No newline at end of file
+{"version":3,"file":"__styles.cjs.js","sources":["../../../packages/core/src/__styles.ts"],"sourcesContent":["import { reduceToClassNameForSlots } from './runtime/reduceToClassNameForSlots';\nimport { MakeStylesOptions, CSSClassesMapBySlot, CSSRuleData } from './types';\n\n/**\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms.\n *\n * @internal\n */\nexport function __styles<Slots extends string>(classesMapBySlot: CSSClassesMapBySlot<Slots>, cssRules: CSSRuleData[]) {\n  const insertionCache: Record<string, boolean> = {};\n\n  let ltrClassNamesForSlots: Record<Slots, string> | null = null;\n  let rtlClassNamesForSlots: Record<Slots, string> | null = null;\n\n  function computeClasses(options: Pick<MakeStylesOptions, 'dir' | 'renderer'>): Record<Slots, string> {\n    const { dir, renderer } = options;\n\n    const isLTR = dir === 'ltr';\n    // As RTL classes are different they should have a different cache key for insertion\n    const rendererId = isLTR ? renderer.id : renderer.id + 'r';\n\n    if (isLTR) {\n      if (ltrClassNamesForSlots === null) {\n        ltrClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    } else {\n      if (rtlClassNamesForSlots === null) {\n        rtlClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    }\n\n    if (insertionCache[rendererId] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[rendererId] = true;\n    }\n\n    return isLTR ? (ltrClassNamesForSlots as Record<Slots, string>) : (rtlClassNamesForSlots as Record<Slots, string>);\n  }\n\n  return computeClasses;\n}\n"],"names":["__styles","classesMapBySlot","cssRules","insertionCache","ltrClassNamesForSlots","rtlClassNamesForSlots","computeClasses","options","dir","renderer","isLTR","rendererId","id","reduceToClassNameForSlots","undefined","insertCSSRules"],"mappings":";;;;;;AAGA;;;;;;SAKgBA,SAA+BC,kBAA8CC;AAC3F,QAAMC,cAAc,GAA4B,EAAhD;AAEA,MAAIC,qBAAqB,GAAiC,IAA1D;AACA,MAAIC,qBAAqB,GAAiC,IAA1D;;AAEA,WAASC,cAAT,CAAwBC,OAAxB;AACE,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAoBF,OAA1B;AAEA,UAAMG,KAAK,GAAGF,GAAG,KAAK,KAAtB;;AAEA,UAAMG,UAAU,GAAGD,KAAK,GAAGD,QAAQ,CAACG,EAAZ,GAAiBH,QAAQ,CAACG,EAAT,GAAc,GAAvD;;AAEA,QAAIF,KAAJ,EAAW;AACT,UAAIN,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGS,mDAAyB,CAACZ,gBAAD,EAAmBO,GAAnB,CAAjD;AACD;AACF,KAJD,MAIO;AACL,UAAIH,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGQ,mDAAyB,CAACZ,gBAAD,EAAmBO,GAAnB,CAAjD;AACD;AACF;;AAED,QAAIL,cAAc,CAACQ,UAAD,CAAd,KAA+BG,SAAnC,EAA8C;AAC5CL,MAAAA,QAAQ,CAACM,cAAT,CAAwBb,QAAxB;AACAC,MAAAA,cAAc,CAACQ,UAAD,CAAd,GAA6B,IAA7B;AACD;;AAED,WAAOD,KAAK,GAAIN,qBAAJ,GAAuDC,qBAAnE;AACD;;AAED,SAAOC,cAAP;AACD;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/__styles.d.ts b/node_modules/@griffel/core/__styles.d.ts
index c2a8ddb..cbb2673 100644
--- a/node_modules/@griffel/core/__styles.d.ts
+++ b/node_modules/@griffel/core/__styles.d.ts
@@ -1,7 +1,7 @@
-import { MakeStylesOptions, CSSClassesMapBySlot, CSSRulesByBucket } from './types';
+import { MakeStylesOptions, CSSClassesMapBySlot, CSSRuleData } from './types';
 /**
  * A version of makeStyles() that accepts build output as an input and skips all runtime transforms.
  *
  * @internal
  */
-export declare function __styles<Slots extends string>(classesMapBySlot: CSSClassesMapBySlot<Slots>, cssRules: CSSRulesByBucket): (options: Pick<MakeStylesOptions, 'dir' | 'renderer'>) => Record<Slots, string>;
+export declare function __styles<Slots extends string>(classesMapBySlot: CSSClassesMapBySlot<Slots>, cssRules: CSSRuleData[]): (options: Pick<MakeStylesOptions, 'dir' | 'renderer'>) => Record<Slots, string>;
diff --git a/node_modules/@griffel/core/__styles.esm.js.map b/node_modules/@griffel/core/__styles.esm.js.map
index ae5ff24..df5d2d8 100644
--- a/node_modules/@griffel/core/__styles.esm.js.map
+++ b/node_modules/@griffel/core/__styles.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"__styles.esm.js","sources":["../../../packages/core/src/__styles.ts"],"sourcesContent":["import { reduceToClassNameForSlots } from './runtime/reduceToClassNameForSlots';\nimport { MakeStylesOptions, CSSClassesMapBySlot, CSSRulesByBucket } from './types';\n\n/**\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms.\n *\n * @internal\n */\nexport function __styles<Slots extends string>(\n  classesMapBySlot: CSSClassesMapBySlot<Slots>,\n  cssRules: CSSRulesByBucket,\n) {\n  const insertionCache: Record<string, boolean> = {};\n\n  let ltrClassNamesForSlots: Record<Slots, string> | null = null;\n  let rtlClassNamesForSlots: Record<Slots, string> | null = null;\n\n  function computeClasses(options: Pick<MakeStylesOptions, 'dir' | 'renderer'>): Record<Slots, string> {\n    const { dir, renderer } = options;\n\n    const isLTR = dir === 'ltr';\n    // As RTL classes are different they should have a different cache key for insertion\n    const rendererId = isLTR ? renderer.id : renderer.id + 'r';\n\n    if (isLTR) {\n      if (ltrClassNamesForSlots === null) {\n        ltrClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    } else {\n      if (rtlClassNamesForSlots === null) {\n        rtlClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    }\n\n    if (insertionCache[rendererId] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[rendererId] = true;\n    }\n\n    return isLTR ? (ltrClassNamesForSlots as Record<Slots, string>) : (rtlClassNamesForSlots as Record<Slots, string>);\n  }\n\n  return computeClasses;\n}\n"],"names":["__styles","classesMapBySlot","cssRules","insertionCache","ltrClassNamesForSlots","rtlClassNamesForSlots","computeClasses","options","dir","renderer","isLTR","rendererId","id","reduceToClassNameForSlots","undefined","insertCSSRules"],"mappings":";;AAGA;;;;;;SAKgBA,SACdC,kBACAC;AAEA,QAAMC,cAAc,GAA4B,EAAhD;AAEA,MAAIC,qBAAqB,GAAiC,IAA1D;AACA,MAAIC,qBAAqB,GAAiC,IAA1D;;AAEA,WAASC,cAAT,CAAwBC,OAAxB;AACE,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAoBF,OAA1B;AAEA,UAAMG,KAAK,GAAGF,GAAG,KAAK,KAAtB;;AAEA,UAAMG,UAAU,GAAGD,KAAK,GAAGD,QAAQ,CAACG,EAAZ,GAAiBH,QAAQ,CAACG,EAAT,GAAc,GAAvD;;AAEA,QAAIF,KAAJ,EAAW;AACT,UAAIN,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGS,yBAAyB,CAACZ,gBAAD,EAAmBO,GAAnB,CAAjD;AACD;AACF,KAJD,MAIO;AACL,UAAIH,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGQ,yBAAyB,CAACZ,gBAAD,EAAmBO,GAAnB,CAAjD;AACD;AACF;;AAED,QAAIL,cAAc,CAACQ,UAAD,CAAd,KAA+BG,SAAnC,EAA8C;AAC5CL,MAAAA,QAAQ,CAACM,cAAT,CAAwBb,QAAxB;AACAC,MAAAA,cAAc,CAACQ,UAAD,CAAd,GAA6B,IAA7B;AACD;;AAED,WAAOD,KAAK,GAAIN,qBAAJ,GAAuDC,qBAAnE;AACD;;AAED,SAAOC,cAAP;AACD;;;;"}
\ No newline at end of file
+{"version":3,"file":"__styles.esm.js","sources":["../../../packages/core/src/__styles.ts"],"sourcesContent":["import { reduceToClassNameForSlots } from './runtime/reduceToClassNameForSlots';\nimport { MakeStylesOptions, CSSClassesMapBySlot, CSSRuleData } from './types';\n\n/**\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms.\n *\n * @internal\n */\nexport function __styles<Slots extends string>(classesMapBySlot: CSSClassesMapBySlot<Slots>, cssRules: CSSRuleData[]) {\n  const insertionCache: Record<string, boolean> = {};\n\n  let ltrClassNamesForSlots: Record<Slots, string> | null = null;\n  let rtlClassNamesForSlots: Record<Slots, string> | null = null;\n\n  function computeClasses(options: Pick<MakeStylesOptions, 'dir' | 'renderer'>): Record<Slots, string> {\n    const { dir, renderer } = options;\n\n    const isLTR = dir === 'ltr';\n    // As RTL classes are different they should have a different cache key for insertion\n    const rendererId = isLTR ? renderer.id : renderer.id + 'r';\n\n    if (isLTR) {\n      if (ltrClassNamesForSlots === null) {\n        ltrClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    } else {\n      if (rtlClassNamesForSlots === null) {\n        rtlClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    }\n\n    if (insertionCache[rendererId] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[rendererId] = true;\n    }\n\n    return isLTR ? (ltrClassNamesForSlots as Record<Slots, string>) : (rtlClassNamesForSlots as Record<Slots, string>);\n  }\n\n  return computeClasses;\n}\n"],"names":["__styles","classesMapBySlot","cssRules","insertionCache","ltrClassNamesForSlots","rtlClassNamesForSlots","computeClasses","options","dir","renderer","isLTR","rendererId","id","reduceToClassNameForSlots","undefined","insertCSSRules"],"mappings":";;AAGA;;;;;;SAKgBA,SAA+BC,kBAA8CC;AAC3F,QAAMC,cAAc,GAA4B,EAAhD;AAEA,MAAIC,qBAAqB,GAAiC,IAA1D;AACA,MAAIC,qBAAqB,GAAiC,IAA1D;;AAEA,WAASC,cAAT,CAAwBC,OAAxB;AACE,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAoBF,OAA1B;AAEA,UAAMG,KAAK,GAAGF,GAAG,KAAK,KAAtB;;AAEA,UAAMG,UAAU,GAAGD,KAAK,GAAGD,QAAQ,CAACG,EAAZ,GAAiBH,QAAQ,CAACG,EAAT,GAAc,GAAvD;;AAEA,QAAIF,KAAJ,EAAW;AACT,UAAIN,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGS,yBAAyB,CAACZ,gBAAD,EAAmBO,GAAnB,CAAjD;AACD;AACF,KAJD,MAIO;AACL,UAAIH,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGQ,yBAAyB,CAACZ,gBAAD,EAAmBO,GAAnB,CAAjD;AACD;AACF;;AAED,QAAIL,cAAc,CAACQ,UAAD,CAAd,KAA+BG,SAAnC,EAA8C;AAC5CL,MAAAA,QAAQ,CAACM,cAAT,CAAwBb,QAAxB;AACAC,MAAAA,cAAc,CAACQ,UAAD,CAAd,GAA6B,IAA7B;AACD;;AAED,WAAOD,KAAK,GAAIN,qBAAJ,GAAuDC,qBAAnE;AACD;;AAED,SAAOC,cAAP;AACD;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/index.cjs.js b/node_modules/@griffel/core/index.cjs.js
index 05d2d2f..f0bb447 100644
--- a/node_modules/@griffel/core/index.cjs.js
+++ b/node_modules/@griffel/core/index.cjs.js
@@ -11,6 +11,7 @@ var borderColor = require('./shorthands/borderColor.cjs.js');
 var borderStyle = require('./shorthands/borderStyle.cjs.js');
 var borderRadius = require('./shorthands/borderRadius.cjs.js');
 var borderWidth = require('./shorthands/borderWidth.cjs.js');
+var flex = require('./shorthands/flex.cjs.js');
 var gap = require('./shorthands/gap.cjs.js');
 var margin = require('./shorthands/margin.cjs.js');
 var padding = require('./shorthands/padding.cjs.js');
@@ -39,6 +40,7 @@ const shorthands = {
   borderStyle: borderStyle.borderStyle,
   borderRadius: borderRadius.borderRadius,
   borderWidth: borderWidth.borderWidth,
+  flex: flex.flex,
   gap: gap.gap,
   margin: margin.margin,
   padding: padding.padding,
diff --git a/node_modules/@griffel/core/index.cjs.js.map b/node_modules/@griffel/core/index.cjs.js.map
index 26bd404..46f8207 100644
--- a/node_modules/@griffel/core/index.cjs.js.map
+++ b/node_modules/@griffel/core/index.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.cjs.js","sources":["../../../packages/core/src/index.ts"],"sourcesContent":["// This should be just \"export * as shorthands from \"\n// https://github.com/microsoft/fluentui/issues/20694\nimport {\n  border,\n  borderLeft,\n  borderBottom,\n  borderRight,\n  borderTop,\n  borderColor,\n  borderStyle,\n  borderRadius,\n  borderWidth,\n  gap,\n  margin,\n  padding,\n  overflow,\n  inset,\n  outline,\n} from './shorthands/index';\n\nexport const shorthands = {\n  border,\n  borderLeft,\n  borderBottom,\n  borderRight,\n  borderTop,\n  borderColor,\n  borderStyle,\n  borderRadius,\n  borderWidth,\n  gap,\n  margin,\n  padding,\n  overflow,\n  inset,\n  outline,\n};\n\nexport { createDOMRenderer } from './renderer/createDOMRenderer';\nexport type { CreateDOMRendererOptions } from './renderer/createDOMRenderer';\nexport { styleBucketOrdering } from './renderer/getStyleSheetForBucket';\nexport { rehydrateRendererCache } from './renderer/rehydrateRendererCache';\n\nexport { mergeClasses } from './mergeClasses';\nexport { makeStaticStyles } from './makeStaticStyles';\nexport { makeStyles } from './makeStyles';\nexport { resolveStyleRulesForSlots } from './resolveStyleRulesForSlots';\n\n// Private exports, are used by build time transforms\nexport { resolveStyleRules } from './runtime/resolveStyleRules';\nexport { __styles } from './__styles';\n\nexport * from './constants';\nexport type {\n  // Static styles\n  GriffelStaticStyle,\n  GriffelStaticStyles,\n  // Styles\n  GriffelAnimation,\n  GriffelStyle,\n  // Internal types\n  CSSClasses,\n  CSSClassesMapBySlot,\n  CSSRulesByBucket,\n  StyleBucketName,\n  // Util\n  MakeStaticStylesOptions,\n  MakeStylesOptions,\n  GriffelRenderer,\n} from './types';\n\n// Private exports, are used by devtools\nexport type { DebugCSSRules, DebugSequence, DebugResult } from './devtools';\n"],"names":["shorthands","border","borderLeft","borderBottom","borderRight","borderTop","borderColor","borderStyle","borderRadius","borderWidth","gap","margin","padding","overflow","inset","outline"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;MAoBaA,UAAU,GAAG;AACxBC,UAAAA,aADwB;AAExBC,cAAAA,qBAFwB;AAGxBC,gBAAAA,yBAHwB;AAIxBC,eAAAA,uBAJwB;AAKxBC,aAAAA,mBALwB;AAMxBC,eAAAA,uBANwB;AAOxBC,eAAAA,uBAPwB;AAQxBC,gBAAAA,yBARwB;AASxBC,eAAAA,uBATwB;AAUxBC,OAAAA,OAVwB;AAWxBC,UAAAA,aAXwB;AAYxBC,WAAAA,eAZwB;AAaxBC,YAAAA,iBAbwB;AAcxBC,SAAAA,WAdwB;AAexBC,WAAAA;AAfwB;;;;;;;;;;;;;;;;;;;;;;"}
\ No newline at end of file
+{"version":3,"file":"index.cjs.js","sources":["../../../packages/core/src/index.ts"],"sourcesContent":["// This should be just \"export * as shorthands from \"\n// https://github.com/microsoft/fluentui/issues/20694\nimport {\n  border,\n  borderLeft,\n  borderBottom,\n  borderRight,\n  borderTop,\n  borderColor,\n  borderStyle,\n  borderRadius,\n  borderWidth,\n  flex,\n  gap,\n  margin,\n  padding,\n  overflow,\n  inset,\n  outline,\n} from './shorthands/index';\n\nexport const shorthands = {\n  border,\n  borderLeft,\n  borderBottom,\n  borderRight,\n  borderTop,\n  borderColor,\n  borderStyle,\n  borderRadius,\n  borderWidth,\n  flex,\n  gap,\n  margin,\n  padding,\n  overflow,\n  inset,\n  outline,\n};\n\nexport { createDOMRenderer } from './renderer/createDOMRenderer';\nexport type { CreateDOMRendererOptions } from './renderer/createDOMRenderer';\nexport { styleBucketOrdering } from './renderer/getStyleSheetForBucket';\nexport { rehydrateRendererCache } from './renderer/rehydrateRendererCache';\n\nexport { mergeClasses } from './mergeClasses';\nexport { makeStaticStyles } from './makeStaticStyles';\nexport { makeStyles } from './makeStyles';\nexport { resolveStyleRulesForSlots } from './resolveStyleRulesForSlots';\n\n// Private exports, are used by build time transforms\nexport { resolveStyleRules } from './runtime/resolveStyleRules';\nexport { __styles } from './__styles';\n\nexport * from './constants';\nexport type {\n  // Static styles\n  GriffelStaticStyle,\n  GriffelStaticStyles,\n  // Styles\n  GriffelAnimation,\n  GriffelStyle,\n  // Internal types\n  CSSClasses,\n  CSSClassesMapBySlot,\n  StyleBucketName,\n  // Util\n  MakeStaticStylesOptions,\n  MakeStylesOptions,\n  GriffelRenderer,\n  CSSRuleData,\n} from './types';\n\n// Private exports, are used by devtools\nexport type { DebugCSSRules, DebugSequence, DebugResult } from './devtools';\n"],"names":["shorthands","border","borderLeft","borderBottom","borderRight","borderTop","borderColor","borderStyle","borderRadius","borderWidth","flex","gap","margin","padding","overflow","inset","outline"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;MAqBaA,UAAU,GAAG;AACxBC,UAAAA,aADwB;AAExBC,cAAAA,qBAFwB;AAGxBC,gBAAAA,yBAHwB;AAIxBC,eAAAA,uBAJwB;AAKxBC,aAAAA,mBALwB;AAMxBC,eAAAA,uBANwB;AAOxBC,eAAAA,uBAPwB;AAQxBC,gBAAAA,yBARwB;AASxBC,eAAAA,uBATwB;AAUxBC,QAAAA,SAVwB;AAWxBC,OAAAA,OAXwB;AAYxBC,UAAAA,aAZwB;AAaxBC,WAAAA,eAbwB;AAcxBC,YAAAA,iBAdwB;AAexBC,SAAAA,WAfwB;AAgBxBC,WAAAA;AAhBwB;;;;;;;;;;;;;;;;;;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/index.d.ts b/node_modules/@griffel/core/index.d.ts
index 4cdf856..f0f5ffc 100644
--- a/node_modules/@griffel/core/index.d.ts
+++ b/node_modules/@griffel/core/index.d.ts
@@ -1,4 +1,4 @@
-import { border, borderLeft, borderBottom, borderRight, borderTop, borderColor, borderStyle, borderRadius, borderWidth, gap, margin, padding, overflow, inset, outline } from './shorthands/index';
+import { border, borderLeft, borderBottom, borderRight, borderTop, borderColor, borderStyle, borderRadius, borderWidth, flex, gap, margin, padding, overflow, inset, outline } from './shorthands/index';
 export declare const shorthands: {
     border: typeof border;
     borderLeft: typeof borderLeft;
@@ -9,6 +9,7 @@ export declare const shorthands: {
     borderStyle: typeof borderStyle;
     borderRadius: typeof borderRadius;
     borderWidth: typeof borderWidth;
+    flex: typeof flex;
     gap: typeof gap;
     margin: typeof margin;
     padding: typeof padding;
@@ -27,5 +28,5 @@ export { resolveStyleRulesForSlots } from './resolveStyleRulesForSlots';
 export { resolveStyleRules } from './runtime/resolveStyleRules';
 export { __styles } from './__styles';
 export * from './constants';
-export type { GriffelStaticStyle, GriffelStaticStyles, GriffelAnimation, GriffelStyle, CSSClasses, CSSClassesMapBySlot, CSSRulesByBucket, StyleBucketName, MakeStaticStylesOptions, MakeStylesOptions, GriffelRenderer, } from './types';
+export type { GriffelStaticStyle, GriffelStaticStyles, GriffelAnimation, GriffelStyle, CSSClasses, CSSClassesMapBySlot, StyleBucketName, MakeStaticStylesOptions, MakeStylesOptions, GriffelRenderer, CSSRuleData, } from './types';
 export type { DebugCSSRules, DebugSequence, DebugResult } from './devtools';
diff --git a/node_modules/@griffel/core/index.esm.js b/node_modules/@griffel/core/index.esm.js
index db308f2..b4d4f1c 100644
--- a/node_modules/@griffel/core/index.esm.js
+++ b/node_modules/@griffel/core/index.esm.js
@@ -7,6 +7,7 @@ import { borderColor } from './shorthands/borderColor.esm.js';
 import { borderStyle } from './shorthands/borderStyle.esm.js';
 import { borderRadius } from './shorthands/borderRadius.esm.js';
 import { borderWidth } from './shorthands/borderWidth.esm.js';
+import { flex } from './shorthands/flex.esm.js';
 import { gap } from './shorthands/gap.esm.js';
 import { margin } from './shorthands/margin.esm.js';
 import { padding } from './shorthands/padding.esm.js';
@@ -35,6 +36,7 @@ const shorthands = {
   borderStyle,
   borderRadius,
   borderWidth,
+  flex,
   gap,
   margin,
   padding,
diff --git a/node_modules/@griffel/core/index.esm.js.map b/node_modules/@griffel/core/index.esm.js.map
index 8de6e93..3f4a093 100644
--- a/node_modules/@griffel/core/index.esm.js.map
+++ b/node_modules/@griffel/core/index.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.esm.js","sources":["../../../packages/core/src/index.ts"],"sourcesContent":["// This should be just \"export * as shorthands from \"\n// https://github.com/microsoft/fluentui/issues/20694\nimport {\n  border,\n  borderLeft,\n  borderBottom,\n  borderRight,\n  borderTop,\n  borderColor,\n  borderStyle,\n  borderRadius,\n  borderWidth,\n  gap,\n  margin,\n  padding,\n  overflow,\n  inset,\n  outline,\n} from './shorthands/index';\n\nexport const shorthands = {\n  border,\n  borderLeft,\n  borderBottom,\n  borderRight,\n  borderTop,\n  borderColor,\n  borderStyle,\n  borderRadius,\n  borderWidth,\n  gap,\n  margin,\n  padding,\n  overflow,\n  inset,\n  outline,\n};\n\nexport { createDOMRenderer } from './renderer/createDOMRenderer';\nexport type { CreateDOMRendererOptions } from './renderer/createDOMRenderer';\nexport { styleBucketOrdering } from './renderer/getStyleSheetForBucket';\nexport { rehydrateRendererCache } from './renderer/rehydrateRendererCache';\n\nexport { mergeClasses } from './mergeClasses';\nexport { makeStaticStyles } from './makeStaticStyles';\nexport { makeStyles } from './makeStyles';\nexport { resolveStyleRulesForSlots } from './resolveStyleRulesForSlots';\n\n// Private exports, are used by build time transforms\nexport { resolveStyleRules } from './runtime/resolveStyleRules';\nexport { __styles } from './__styles';\n\nexport * from './constants';\nexport type {\n  // Static styles\n  GriffelStaticStyle,\n  GriffelStaticStyles,\n  // Styles\n  GriffelAnimation,\n  GriffelStyle,\n  // Internal types\n  CSSClasses,\n  CSSClassesMapBySlot,\n  CSSRulesByBucket,\n  StyleBucketName,\n  // Util\n  MakeStaticStylesOptions,\n  MakeStylesOptions,\n  GriffelRenderer,\n} from './types';\n\n// Private exports, are used by devtools\nexport type { DebugCSSRules, DebugSequence, DebugResult } from './devtools';\n"],"names":["shorthands","border","borderLeft","borderBottom","borderRight","borderTop","borderColor","borderStyle","borderRadius","borderWidth","gap","margin","padding","overflow","inset","outline"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;MAoBaA,UAAU,GAAG;AACxBC,EAAAA,MADwB;AAExBC,EAAAA,UAFwB;AAGxBC,EAAAA,YAHwB;AAIxBC,EAAAA,WAJwB;AAKxBC,EAAAA,SALwB;AAMxBC,EAAAA,WANwB;AAOxBC,EAAAA,WAPwB;AAQxBC,EAAAA,YARwB;AASxBC,EAAAA,WATwB;AAUxBC,EAAAA,GAVwB;AAWxBC,EAAAA,MAXwB;AAYxBC,EAAAA,OAZwB;AAaxBC,EAAAA,QAbwB;AAcxBC,EAAAA,KAdwB;AAexBC,EAAAA;AAfwB;;;;"}
\ No newline at end of file
+{"version":3,"file":"index.esm.js","sources":["../../../packages/core/src/index.ts"],"sourcesContent":["// This should be just \"export * as shorthands from \"\n// https://github.com/microsoft/fluentui/issues/20694\nimport {\n  border,\n  borderLeft,\n  borderBottom,\n  borderRight,\n  borderTop,\n  borderColor,\n  borderStyle,\n  borderRadius,\n  borderWidth,\n  flex,\n  gap,\n  margin,\n  padding,\n  overflow,\n  inset,\n  outline,\n} from './shorthands/index';\n\nexport const shorthands = {\n  border,\n  borderLeft,\n  borderBottom,\n  borderRight,\n  borderTop,\n  borderColor,\n  borderStyle,\n  borderRadius,\n  borderWidth,\n  flex,\n  gap,\n  margin,\n  padding,\n  overflow,\n  inset,\n  outline,\n};\n\nexport { createDOMRenderer } from './renderer/createDOMRenderer';\nexport type { CreateDOMRendererOptions } from './renderer/createDOMRenderer';\nexport { styleBucketOrdering } from './renderer/getStyleSheetForBucket';\nexport { rehydrateRendererCache } from './renderer/rehydrateRendererCache';\n\nexport { mergeClasses } from './mergeClasses';\nexport { makeStaticStyles } from './makeStaticStyles';\nexport { makeStyles } from './makeStyles';\nexport { resolveStyleRulesForSlots } from './resolveStyleRulesForSlots';\n\n// Private exports, are used by build time transforms\nexport { resolveStyleRules } from './runtime/resolveStyleRules';\nexport { __styles } from './__styles';\n\nexport * from './constants';\nexport type {\n  // Static styles\n  GriffelStaticStyle,\n  GriffelStaticStyles,\n  // Styles\n  GriffelAnimation,\n  GriffelStyle,\n  // Internal types\n  CSSClasses,\n  CSSClassesMapBySlot,\n  StyleBucketName,\n  // Util\n  MakeStaticStylesOptions,\n  MakeStylesOptions,\n  GriffelRenderer,\n  CSSRuleData,\n} from './types';\n\n// Private exports, are used by devtools\nexport type { DebugCSSRules, DebugSequence, DebugResult } from './devtools';\n"],"names":["shorthands","border","borderLeft","borderBottom","borderRight","borderTop","borderColor","borderStyle","borderRadius","borderWidth","flex","gap","margin","padding","overflow","inset","outline"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;MAqBaA,UAAU,GAAG;AACxBC,EAAAA,MADwB;AAExBC,EAAAA,UAFwB;AAGxBC,EAAAA,YAHwB;AAIxBC,EAAAA,WAJwB;AAKxBC,EAAAA,SALwB;AAMxBC,EAAAA,WANwB;AAOxBC,EAAAA,WAPwB;AAQxBC,EAAAA,YARwB;AASxBC,EAAAA,WATwB;AAUxBC,EAAAA,IAVwB;AAWxBC,EAAAA,GAXwB;AAYxBC,EAAAA,MAZwB;AAaxBC,EAAAA,OAbwB;AAcxBC,EAAAA,QAdwB;AAexBC,EAAAA,KAfwB;AAgBxBC,EAAAA;AAhBwB;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/makeStyles.cjs.js b/node_modules/@griffel/core/makeStyles.cjs.js
index 22864ed..689f7de 100644
--- a/node_modules/@griffel/core/makeStyles.cjs.js
+++ b/node_modules/@griffel/core/makeStyles.cjs.js
@@ -11,7 +11,7 @@ var reduceToClassNameForSlots = require('./runtime/reduceToClassNameForSlots.cjs
 function makeStyles(stylesBySlots) {
   const insertionCache = {};
   let classesMapBySlot = null;
-  let cssRules = null;
+  let cssRules = [];
   let ltrClassNamesForSlots = null;
   let rtlClassNamesForSlots = null;
 
diff --git a/node_modules/@griffel/core/makeStyles.cjs.js.map b/node_modules/@griffel/core/makeStyles.cjs.js.map
index 07ddbea..a781990 100644
--- a/node_modules/@griffel/core/makeStyles.cjs.js.map
+++ b/node_modules/@griffel/core/makeStyles.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"makeStyles.cjs.js","sources":["../../../packages/core/src/makeStyles.ts"],"sourcesContent":["import { debugData, isDevToolsEnabled } from './devtools';\nimport { resolveStyleRulesForSlots } from './resolveStyleRulesForSlots';\nimport { reduceToClassNameForSlots } from './runtime/reduceToClassNameForSlots';\nimport { CSSClassesMapBySlot, CSSRulesByBucket, MakeStylesOptions, StylesBySlots } from './types';\n\nexport function makeStyles<Slots extends string | number>(stylesBySlots: StylesBySlots<Slots>) {\n  const insertionCache: Record<string, boolean> = {};\n\n  let classesMapBySlot: CSSClassesMapBySlot<Slots> | null = null;\n  let cssRules: CSSRulesByBucket | null = null;\n\n  let ltrClassNamesForSlots: Record<Slots, string> | null = null;\n  let rtlClassNamesForSlots: Record<Slots, string> | null = null;\n\n  function computeClasses(options: MakeStylesOptions): Record<Slots, string> {\n    const { dir, renderer } = options;\n\n    if (classesMapBySlot === null) {\n      [classesMapBySlot, cssRules] = resolveStyleRulesForSlots(stylesBySlots);\n    }\n\n    const isLTR = dir === 'ltr';\n    // As RTL classes are different they should have a different cache key for insertion\n    const rendererId = isLTR ? renderer.id : renderer.id + 'r';\n\n    if (isLTR) {\n      if (ltrClassNamesForSlots === null) {\n        ltrClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    } else {\n      if (rtlClassNamesForSlots === null) {\n        rtlClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    }\n\n    if (insertionCache[rendererId] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[rendererId] = true;\n    }\n    const classNamesForSlots = isLTR\n      ? (ltrClassNamesForSlots as Record<Slots, string>)\n      : (rtlClassNamesForSlots as Record<Slots, string>);\n\n    if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n      debugData.addSequenceDetails(classNamesForSlots!);\n    }\n\n    return classNamesForSlots;\n  }\n\n  return computeClasses;\n}\n"],"names":["makeStyles","stylesBySlots","insertionCache","classesMapBySlot","cssRules","ltrClassNamesForSlots","rtlClassNamesForSlots","computeClasses","options","dir","renderer","resolveStyleRulesForSlots","isLTR","rendererId","id","reduceToClassNameForSlots","undefined","insertCSSRules","classNamesForSlots","process","env","NODE_ENV","isDevToolsEnabled","debugData","addSequenceDetails"],"mappings":";;;;;;;;;;SAKgBA,WAA0CC;AACxD,QAAMC,cAAc,GAA4B,EAAhD;AAEA,MAAIC,gBAAgB,GAAsC,IAA1D;AACA,MAAIC,QAAQ,GAA4B,IAAxC;AAEA,MAAIC,qBAAqB,GAAiC,IAA1D;AACA,MAAIC,qBAAqB,GAAiC,IAA1D;;AAEA,WAASC,cAAT,CAAwBC,OAAxB;AACE,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAoBF,OAA1B;;AAEA,QAAIL,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B,OAACA,gBAAD,EAAmBC,QAAnB,IAA+BO,mDAAyB,CAACV,aAAD,CAAxD;AACD;;AAED,UAAMW,KAAK,GAAGH,GAAG,KAAK,KAAtB;;AAEA,UAAMI,UAAU,GAAGD,KAAK,GAAGF,QAAQ,CAACI,EAAZ,GAAiBJ,QAAQ,CAACI,EAAT,GAAc,GAAvD;;AAEA,QAAIF,KAAJ,EAAW;AACT,UAAIP,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGU,mDAAyB,CAACZ,gBAAD,EAAmBM,GAAnB,CAAjD;AACD;AACF,KAJD,MAIO;AACL,UAAIH,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGS,mDAAyB,CAACZ,gBAAD,EAAmBM,GAAnB,CAAjD;AACD;AACF;;AAED,QAAIP,cAAc,CAACW,UAAD,CAAd,KAA+BG,SAAnC,EAA8C;AAC5CN,MAAAA,QAAQ,CAACO,cAAT,CAAwBb,QAAxB;AACAF,MAAAA,cAAc,CAACW,UAAD,CAAd,GAA6B,IAA7B;AACD;;AACD,UAAMK,kBAAkB,GAAGN,KAAK,GAC3BP,qBAD2B,GAE3BC,qBAFL;;AAIA,QAAIa,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,mCAA7C,EAAgE;AAC9DC,MAAAA,eAAS,CAACC,kBAAV,CAA6BN,kBAA7B;AACD;;AAED,WAAOA,kBAAP;AACD;;AAED,SAAOX,cAAP;AACD;;;;"}
\ No newline at end of file
+{"version":3,"file":"makeStyles.cjs.js","sources":["../../../packages/core/src/makeStyles.ts"],"sourcesContent":["import { debugData, isDevToolsEnabled } from './devtools';\nimport { resolveStyleRulesForSlots } from './resolveStyleRulesForSlots';\nimport { reduceToClassNameForSlots } from './runtime/reduceToClassNameForSlots';\nimport { CSSClassesMapBySlot, CSSRuleData, MakeStylesOptions, StylesBySlots } from './types';\n\nexport function makeStyles<Slots extends string | number>(stylesBySlots: StylesBySlots<Slots>) {\n  const insertionCache: Record<string, boolean> = {};\n\n  let classesMapBySlot: CSSClassesMapBySlot<Slots> | null = null;\n  let cssRules: CSSRuleData[] = [];\n\n  let ltrClassNamesForSlots: Record<Slots, string> | null = null;\n  let rtlClassNamesForSlots: Record<Slots, string> | null = null;\n\n  function computeClasses(options: MakeStylesOptions): Record<Slots, string> {\n    const { dir, renderer } = options;\n\n    if (classesMapBySlot === null) {\n      [classesMapBySlot, cssRules] = resolveStyleRulesForSlots(stylesBySlots);\n    }\n\n    const isLTR = dir === 'ltr';\n    // As RTL classes are different they should have a different cache key for insertion\n    const rendererId = isLTR ? renderer.id : renderer.id + 'r';\n\n    if (isLTR) {\n      if (ltrClassNamesForSlots === null) {\n        ltrClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    } else {\n      if (rtlClassNamesForSlots === null) {\n        rtlClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    }\n\n    if (insertionCache[rendererId] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[rendererId] = true;\n    }\n    const classNamesForSlots = isLTR\n      ? (ltrClassNamesForSlots as Record<Slots, string>)\n      : (rtlClassNamesForSlots as Record<Slots, string>);\n\n    if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n      debugData.addSequenceDetails(classNamesForSlots!);\n    }\n\n    return classNamesForSlots;\n  }\n\n  return computeClasses;\n}\n"],"names":["makeStyles","stylesBySlots","insertionCache","classesMapBySlot","cssRules","ltrClassNamesForSlots","rtlClassNamesForSlots","computeClasses","options","dir","renderer","resolveStyleRulesForSlots","isLTR","rendererId","id","reduceToClassNameForSlots","undefined","insertCSSRules","classNamesForSlots","process","env","NODE_ENV","isDevToolsEnabled","debugData","addSequenceDetails"],"mappings":";;;;;;;;;;SAKgBA,WAA0CC;AACxD,QAAMC,cAAc,GAA4B,EAAhD;AAEA,MAAIC,gBAAgB,GAAsC,IAA1D;AACA,MAAIC,QAAQ,GAAkB,EAA9B;AAEA,MAAIC,qBAAqB,GAAiC,IAA1D;AACA,MAAIC,qBAAqB,GAAiC,IAA1D;;AAEA,WAASC,cAAT,CAAwBC,OAAxB;AACE,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAoBF,OAA1B;;AAEA,QAAIL,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B,OAACA,gBAAD,EAAmBC,QAAnB,IAA+BO,mDAAyB,CAACV,aAAD,CAAxD;AACD;;AAED,UAAMW,KAAK,GAAGH,GAAG,KAAK,KAAtB;;AAEA,UAAMI,UAAU,GAAGD,KAAK,GAAGF,QAAQ,CAACI,EAAZ,GAAiBJ,QAAQ,CAACI,EAAT,GAAc,GAAvD;;AAEA,QAAIF,KAAJ,EAAW;AACT,UAAIP,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGU,mDAAyB,CAACZ,gBAAD,EAAmBM,GAAnB,CAAjD;AACD;AACF,KAJD,MAIO;AACL,UAAIH,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGS,mDAAyB,CAACZ,gBAAD,EAAmBM,GAAnB,CAAjD;AACD;AACF;;AAED,QAAIP,cAAc,CAACW,UAAD,CAAd,KAA+BG,SAAnC,EAA8C;AAC5CN,MAAAA,QAAQ,CAACO,cAAT,CAAwBb,QAAxB;AACAF,MAAAA,cAAc,CAACW,UAAD,CAAd,GAA6B,IAA7B;AACD;;AACD,UAAMK,kBAAkB,GAAGN,KAAK,GAC3BP,qBAD2B,GAE3BC,qBAFL;;AAIA,QAAIa,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,mCAA7C,EAAgE;AAC9DC,MAAAA,eAAS,CAACC,kBAAV,CAA6BN,kBAA7B;AACD;;AAED,WAAOA,kBAAP;AACD;;AAED,SAAOX,cAAP;AACD;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/makeStyles.esm.js b/node_modules/@griffel/core/makeStyles.esm.js
index 67f56c4..6f72fd9 100644
--- a/node_modules/@griffel/core/makeStyles.esm.js
+++ b/node_modules/@griffel/core/makeStyles.esm.js
@@ -7,7 +7,7 @@ import { reduceToClassNameForSlots } from './runtime/reduceToClassNameForSlots.e
 function makeStyles(stylesBySlots) {
   const insertionCache = {};
   let classesMapBySlot = null;
-  let cssRules = null;
+  let cssRules = [];
   let ltrClassNamesForSlots = null;
   let rtlClassNamesForSlots = null;
 
diff --git a/node_modules/@griffel/core/makeStyles.esm.js.map b/node_modules/@griffel/core/makeStyles.esm.js.map
index d30a712..e10e924 100644
--- a/node_modules/@griffel/core/makeStyles.esm.js.map
+++ b/node_modules/@griffel/core/makeStyles.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"makeStyles.esm.js","sources":["../../../packages/core/src/makeStyles.ts"],"sourcesContent":["import { debugData, isDevToolsEnabled } from './devtools';\nimport { resolveStyleRulesForSlots } from './resolveStyleRulesForSlots';\nimport { reduceToClassNameForSlots } from './runtime/reduceToClassNameForSlots';\nimport { CSSClassesMapBySlot, CSSRulesByBucket, MakeStylesOptions, StylesBySlots } from './types';\n\nexport function makeStyles<Slots extends string | number>(stylesBySlots: StylesBySlots<Slots>) {\n  const insertionCache: Record<string, boolean> = {};\n\n  let classesMapBySlot: CSSClassesMapBySlot<Slots> | null = null;\n  let cssRules: CSSRulesByBucket | null = null;\n\n  let ltrClassNamesForSlots: Record<Slots, string> | null = null;\n  let rtlClassNamesForSlots: Record<Slots, string> | null = null;\n\n  function computeClasses(options: MakeStylesOptions): Record<Slots, string> {\n    const { dir, renderer } = options;\n\n    if (classesMapBySlot === null) {\n      [classesMapBySlot, cssRules] = resolveStyleRulesForSlots(stylesBySlots);\n    }\n\n    const isLTR = dir === 'ltr';\n    // As RTL classes are different they should have a different cache key for insertion\n    const rendererId = isLTR ? renderer.id : renderer.id + 'r';\n\n    if (isLTR) {\n      if (ltrClassNamesForSlots === null) {\n        ltrClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    } else {\n      if (rtlClassNamesForSlots === null) {\n        rtlClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    }\n\n    if (insertionCache[rendererId] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[rendererId] = true;\n    }\n    const classNamesForSlots = isLTR\n      ? (ltrClassNamesForSlots as Record<Slots, string>)\n      : (rtlClassNamesForSlots as Record<Slots, string>);\n\n    if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n      debugData.addSequenceDetails(classNamesForSlots!);\n    }\n\n    return classNamesForSlots;\n  }\n\n  return computeClasses;\n}\n"],"names":["makeStyles","stylesBySlots","insertionCache","classesMapBySlot","cssRules","ltrClassNamesForSlots","rtlClassNamesForSlots","computeClasses","options","dir","renderer","resolveStyleRulesForSlots","isLTR","rendererId","id","reduceToClassNameForSlots","undefined","insertCSSRules","classNamesForSlots","process","env","NODE_ENV","isDevToolsEnabled","debugData","addSequenceDetails"],"mappings":";;;;;;SAKgBA,WAA0CC;AACxD,QAAMC,cAAc,GAA4B,EAAhD;AAEA,MAAIC,gBAAgB,GAAsC,IAA1D;AACA,MAAIC,QAAQ,GAA4B,IAAxC;AAEA,MAAIC,qBAAqB,GAAiC,IAA1D;AACA,MAAIC,qBAAqB,GAAiC,IAA1D;;AAEA,WAASC,cAAT,CAAwBC,OAAxB;AACE,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAoBF,OAA1B;;AAEA,QAAIL,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B,OAACA,gBAAD,EAAmBC,QAAnB,IAA+BO,yBAAyB,CAACV,aAAD,CAAxD;AACD;;AAED,UAAMW,KAAK,GAAGH,GAAG,KAAK,KAAtB;;AAEA,UAAMI,UAAU,GAAGD,KAAK,GAAGF,QAAQ,CAACI,EAAZ,GAAiBJ,QAAQ,CAACI,EAAT,GAAc,GAAvD;;AAEA,QAAIF,KAAJ,EAAW;AACT,UAAIP,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGU,yBAAyB,CAACZ,gBAAD,EAAmBM,GAAnB,CAAjD;AACD;AACF,KAJD,MAIO;AACL,UAAIH,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGS,yBAAyB,CAACZ,gBAAD,EAAmBM,GAAnB,CAAjD;AACD;AACF;;AAED,QAAIP,cAAc,CAACW,UAAD,CAAd,KAA+BG,SAAnC,EAA8C;AAC5CN,MAAAA,QAAQ,CAACO,cAAT,CAAwBb,QAAxB;AACAF,MAAAA,cAAc,CAACW,UAAD,CAAd,GAA6B,IAA7B;AACD;;AACD,UAAMK,kBAAkB,GAAGN,KAAK,GAC3BP,qBAD2B,GAE3BC,qBAFL;;AAIA,QAAIa,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,iBAA7C,EAAgE;AAC9DC,MAAAA,SAAS,CAACC,kBAAV,CAA6BN,kBAA7B;AACD;;AAED,WAAOA,kBAAP;AACD;;AAED,SAAOX,cAAP;AACD;;;;"}
\ No newline at end of file
+{"version":3,"file":"makeStyles.esm.js","sources":["../../../packages/core/src/makeStyles.ts"],"sourcesContent":["import { debugData, isDevToolsEnabled } from './devtools';\nimport { resolveStyleRulesForSlots } from './resolveStyleRulesForSlots';\nimport { reduceToClassNameForSlots } from './runtime/reduceToClassNameForSlots';\nimport { CSSClassesMapBySlot, CSSRuleData, MakeStylesOptions, StylesBySlots } from './types';\n\nexport function makeStyles<Slots extends string | number>(stylesBySlots: StylesBySlots<Slots>) {\n  const insertionCache: Record<string, boolean> = {};\n\n  let classesMapBySlot: CSSClassesMapBySlot<Slots> | null = null;\n  let cssRules: CSSRuleData[] = [];\n\n  let ltrClassNamesForSlots: Record<Slots, string> | null = null;\n  let rtlClassNamesForSlots: Record<Slots, string> | null = null;\n\n  function computeClasses(options: MakeStylesOptions): Record<Slots, string> {\n    const { dir, renderer } = options;\n\n    if (classesMapBySlot === null) {\n      [classesMapBySlot, cssRules] = resolveStyleRulesForSlots(stylesBySlots);\n    }\n\n    const isLTR = dir === 'ltr';\n    // As RTL classes are different they should have a different cache key for insertion\n    const rendererId = isLTR ? renderer.id : renderer.id + 'r';\n\n    if (isLTR) {\n      if (ltrClassNamesForSlots === null) {\n        ltrClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    } else {\n      if (rtlClassNamesForSlots === null) {\n        rtlClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    }\n\n    if (insertionCache[rendererId] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[rendererId] = true;\n    }\n    const classNamesForSlots = isLTR\n      ? (ltrClassNamesForSlots as Record<Slots, string>)\n      : (rtlClassNamesForSlots as Record<Slots, string>);\n\n    if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n      debugData.addSequenceDetails(classNamesForSlots!);\n    }\n\n    return classNamesForSlots;\n  }\n\n  return computeClasses;\n}\n"],"names":["makeStyles","stylesBySlots","insertionCache","classesMapBySlot","cssRules","ltrClassNamesForSlots","rtlClassNamesForSlots","computeClasses","options","dir","renderer","resolveStyleRulesForSlots","isLTR","rendererId","id","reduceToClassNameForSlots","undefined","insertCSSRules","classNamesForSlots","process","env","NODE_ENV","isDevToolsEnabled","debugData","addSequenceDetails"],"mappings":";;;;;;SAKgBA,WAA0CC;AACxD,QAAMC,cAAc,GAA4B,EAAhD;AAEA,MAAIC,gBAAgB,GAAsC,IAA1D;AACA,MAAIC,QAAQ,GAAkB,EAA9B;AAEA,MAAIC,qBAAqB,GAAiC,IAA1D;AACA,MAAIC,qBAAqB,GAAiC,IAA1D;;AAEA,WAASC,cAAT,CAAwBC,OAAxB;AACE,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAoBF,OAA1B;;AAEA,QAAIL,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B,OAACA,gBAAD,EAAmBC,QAAnB,IAA+BO,yBAAyB,CAACV,aAAD,CAAxD;AACD;;AAED,UAAMW,KAAK,GAAGH,GAAG,KAAK,KAAtB;;AAEA,UAAMI,UAAU,GAAGD,KAAK,GAAGF,QAAQ,CAACI,EAAZ,GAAiBJ,QAAQ,CAACI,EAAT,GAAc,GAAvD;;AAEA,QAAIF,KAAJ,EAAW;AACT,UAAIP,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGU,yBAAyB,CAACZ,gBAAD,EAAmBM,GAAnB,CAAjD;AACD;AACF,KAJD,MAIO;AACL,UAAIH,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,QAAAA,qBAAqB,GAAGS,yBAAyB,CAACZ,gBAAD,EAAmBM,GAAnB,CAAjD;AACD;AACF;;AAED,QAAIP,cAAc,CAACW,UAAD,CAAd,KAA+BG,SAAnC,EAA8C;AAC5CN,MAAAA,QAAQ,CAACO,cAAT,CAAwBb,QAAxB;AACAF,MAAAA,cAAc,CAACW,UAAD,CAAd,GAA6B,IAA7B;AACD;;AACD,UAAMK,kBAAkB,GAAGN,KAAK,GAC3BP,qBAD2B,GAE3BC,qBAFL;;AAIA,QAAIa,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,iBAA7C,EAAgE;AAC9DC,MAAAA,SAAS,CAACC,kBAAV,CAA6BN,kBAA7B;AACD;;AAED,WAAOA,kBAAP;AACD;;AAED,SAAOX,cAAP;AACD;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js b/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js
index 96fa7f0..e957618 100644
--- a/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js
+++ b/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js
@@ -24,39 +24,37 @@ function createDOMRenderer(target = typeof document === 'undefined' ? undefined
     id: `d${lastIndex++}`,
 
     insertCSSRules(cssRules) {
-      // eslint-disable-next-line guard-for-in
-      for (const styleBucketName in cssRules) {
-        const cssRulesForBucket = cssRules[styleBucketName];
-        const sheet = target && getStyleSheetForBucket.getStyleSheetForBucket(styleBucketName, target, renderer, options.styleElementAttributes); // This is a hot path in rendering styles: ".length" is cached in "l" var to avoid accesses the property
+      for (let i = 0, l = cssRules.length; i < l; i++) {
+        const {
+          cssRule: ruleCSS,
+          bucket: styleBucketName
+        } = cssRules[i];
 
-        for (let i = 0, l = cssRulesForBucket.length; i < l; i++) {
-          const ruleCSS = cssRulesForBucket[i];
-
-          if (renderer.insertionCache[ruleCSS]) {
-            continue;
-          }
+        if (renderer.insertionCache[ruleCSS]) {
+          continue;
+        }
 
-          renderer.insertionCache[ruleCSS] = styleBucketName;
+        const sheet = target && getStyleSheetForBucket.getStyleSheetForBucket(styleBucketName, target, renderer, options.styleElementAttributes);
+        renderer.insertionCache[ruleCSS] = styleBucketName;
 
-          if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled.isDevToolsEnabled) {
-            store.debugData.addCSSRule(ruleCSS);
-          }
+        if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled.isDevToolsEnabled) {
+          store.debugData.addCSSRule(ruleCSS);
+        }
 
-          if (sheet) {
-            try {
-              if (unstable_filterCSSRule) {
-                if (unstable_filterCSSRule(ruleCSS)) {
-                  sheet.insertRule(ruleCSS, sheet.cssRules.length);
-                }
-              } else {
+        if (sheet) {
+          try {
+            if (unstable_filterCSSRule) {
+              if (unstable_filterCSSRule(ruleCSS)) {
                 sheet.insertRule(ruleCSS, sheet.cssRules.length);
               }
-            } catch (e) {
-              // We've disabled these warnings due to false-positive errors with browser prefixes
-              if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {
-                // eslint-disable-next-line no-console
-                console.error(`There was a problem inserting the following rule: "${ruleCSS}"`, e);
-              }
+            } else {
+              sheet.insertRule(ruleCSS, sheet.cssRules.length);
+            }
+          } catch (e) {
+            // We've disabled these warnings due to false-positive errors with browser prefixes
+            if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {
+              // eslint-disable-next-line no-console
+              console.error(`There was a problem inserting the following rule: "${ruleCSS}"`, e);
             }
           }
         }
diff --git a/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js.map b/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js.map
index 325a9eb..cb062f6 100644
--- a/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js.map
+++ b/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"createDOMRenderer.cjs.js","sources":["../../../../packages/core/src/renderer/createDOMRenderer.ts"],"sourcesContent":["import { injectDevTools, isDevToolsEnabled, debugData } from '../devtools';\nimport { GriffelRenderer, StyleBucketName } from '../types';\nimport { getStyleSheetForBucket } from './getStyleSheetForBucket';\n\nlet lastIndex = 0;\n\nexport interface CreateDOMRendererOptions {\n  /**\n   * A map of attributes that's passed to the generated style elements. Is useful to set \"nonce\" attribute.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n   */\n  styleElementAttributes?: Record<string, string>;\n\n  /**\n   * A filter run before CSS rule insertion to systematically remove CSS rules at render time.\n   * This can be used to forbid specific rules from being written to the style sheet at run time without\n   * affecting build time styles.\n   *\n   * ⚠️ Keep the filter as performant as possible to avoid negative performance impacts to your application.\n   * ⚠️ This API is unstable and can be removed from the library at any time.\n   */\n  unstable_filterCSSRule?: (cssRule: string) => boolean;\n}\n\n/**\n * Creates a new instances of a renderer.\n *\n * @public\n */\nexport function createDOMRenderer(\n  target: Document | undefined = typeof document === 'undefined' ? undefined : document,\n  options: CreateDOMRendererOptions = {},\n): GriffelRenderer {\n  const { unstable_filterCSSRule } = options;\n  const renderer: GriffelRenderer = {\n    insertionCache: {},\n    styleElements: {},\n\n    id: `d${lastIndex++}`,\n\n    insertCSSRules(cssRules) {\n      // eslint-disable-next-line guard-for-in\n      for (const styleBucketName in cssRules) {\n        const cssRulesForBucket = cssRules[styleBucketName as StyleBucketName]!;\n        const sheet =\n          target &&\n          getStyleSheetForBucket(styleBucketName as StyleBucketName, target, renderer, options.styleElementAttributes);\n\n        // This is a hot path in rendering styles: \".length\" is cached in \"l\" var to avoid accesses the property\n        for (let i = 0, l = cssRulesForBucket.length; i < l; i++) {\n          const ruleCSS = cssRulesForBucket[i];\n\n          if (renderer.insertionCache[ruleCSS]) {\n            continue;\n          }\n\n          renderer.insertionCache[ruleCSS] = styleBucketName as StyleBucketName;\n          if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n            debugData.addCSSRule(ruleCSS);\n          }\n\n          if (sheet) {\n            try {\n              if (unstable_filterCSSRule) {\n                if (unstable_filterCSSRule(ruleCSS)) {\n                  sheet.insertRule(ruleCSS, sheet.cssRules.length);\n                }\n              } else {\n                sheet.insertRule(ruleCSS, sheet.cssRules.length);\n              }\n            } catch (e) {\n              // We've disabled these warnings due to false-positive errors with browser prefixes\n              if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {\n                // eslint-disable-next-line no-console\n                console.error(`There was a problem inserting the following rule: \"${ruleCSS}\"`, e);\n              }\n            }\n          }\n        }\n      }\n    },\n  };\n\n  if (target && process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n    injectDevTools(target);\n  }\n\n  return renderer;\n}\n\n/**\n * Suffixes to be ignored in case of error\n */\nconst ignoreSuffixes = [\n  '-moz-placeholder',\n  '-moz-focus-inner',\n  '-moz-focusring',\n  '-ms-input-placeholder',\n  '-moz-read-write',\n  '-moz-read-only',\n].join('|');\nconst ignoreSuffixesRegex = new RegExp(`:(${ignoreSuffixes})`);\n"],"names":["lastIndex","createDOMRenderer","target","document","undefined","options","unstable_filterCSSRule","renderer","insertionCache","styleElements","id","insertCSSRules","cssRules","styleBucketName","cssRulesForBucket","sheet","getStyleSheetForBucket","styleElementAttributes","i","l","length","ruleCSS","process","env","NODE_ENV","isDevToolsEnabled","debugData","addCSSRule","insertRule","e","ignoreSuffixesRegex","test","console","error","injectDevTools","ignoreSuffixes","join","RegExp"],"mappings":";;;;;;;;;AAIA,IAAIA,SAAS,GAAG,CAAhB;AAqBA;;;;;;SAKgBC,kBACdC,SAA+B,OAAOC,QAAP,KAAoB,WAApB,GAAkCC,SAAlC,GAA8CD,UAC7EE,UAAoC;AAEpC,QAAM;AAAEC,IAAAA;AAAF,MAA6BD,OAAnC;AACA,QAAME,QAAQ,GAAoB;AAChCC,IAAAA,cAAc,EAAE,EADgB;AAEhCC,IAAAA,aAAa,EAAE,EAFiB;AAIhCC,IAAAA,EAAE,MAAMV,SAAS,IAJe;;AAMhCW,IAAAA,cAAc,CAACC,QAAD;AACZ;AACA,WAAK,MAAMC,eAAX,IAA8BD,QAA9B,EAAwC;AACtC,cAAME,iBAAiB,GAAGF,QAAQ,CAACC,eAAD,CAAlC;AACA,cAAME,KAAK,GACTb,MAAM,IACNc,6CAAsB,CAACH,eAAD,EAAqCX,MAArC,EAA6CK,QAA7C,EAAuDF,OAAO,CAACY,sBAA/D,CAFxB,CAFsC;;AAOtC,aAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGL,iBAAiB,CAACM,MAAtC,EAA8CF,CAAC,GAAGC,CAAlD,EAAqDD,CAAC,EAAtD,EAA0D;AACxD,gBAAMG,OAAO,GAAGP,iBAAiB,CAACI,CAAD,CAAjC;;AAEA,cAAIX,QAAQ,CAACC,cAAT,CAAwBa,OAAxB,CAAJ,EAAsC;AACpC;AACD;;AAEDd,UAAAA,QAAQ,CAACC,cAAT,CAAwBa,OAAxB,IAAmCR,eAAnC;;AACA,cAAIS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,mCAA7C,EAAgE;AAC9DC,YAAAA,eAAS,CAACC,UAAV,CAAqBN,OAArB;AACD;;AAED,cAAIN,KAAJ,EAAW;AACT,gBAAI;AACF,kBAAIT,sBAAJ,EAA4B;AAC1B,oBAAIA,sBAAsB,CAACe,OAAD,CAA1B,EAAqC;AACnCN,kBAAAA,KAAK,CAACa,UAAN,CAAiBP,OAAjB,EAA0BN,KAAK,CAACH,QAAN,CAAeQ,MAAzC;AACD;AACF,eAJD,MAIO;AACLL,gBAAAA,KAAK,CAACa,UAAN,CAAiBP,OAAjB,EAA0BN,KAAK,CAACH,QAAN,CAAeQ,MAAzC;AACD;AACF,aARD,CAQE,OAAOS,CAAP,EAAU;AACV;AACA,kBAAIP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACM,mBAAmB,CAACC,IAApB,CAAyBV,OAAzB,CAA9C,EAAiF;AAC/E;AACAW,gBAAAA,OAAO,CAACC,KAAR,uDAAoEZ,UAApE,EAAgFQ,CAAhF;AACD;AACF;AACF;AACF;AACF;AACF;;AA9C+B,GAAlC;;AAiDA,MAAI3B,MAAM,IAAIoB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAnC,IAAmDC,mCAAvD,EAA0E;AACxES,IAAAA,6BAAc,CAAChC,MAAD,CAAd;AACD;;AAED,SAAOK,QAAP;AACD;AAED;;;;AAGA,MAAM4B,cAAc,gBAAG,CACrB,kBADqB,EAErB,kBAFqB,EAGrB,gBAHqB,EAIrB,uBAJqB,EAKrB,iBALqB,EAMrB,gBANqB,EAOrBC,IAPqB,CAOhB,GAPgB,CAAvB;AAQA,MAAMN,mBAAmB,gBAAG,IAAIO,MAAJ,MAAgBF,iBAAhB,CAA5B;;;;"}
\ No newline at end of file
+{"version":3,"file":"createDOMRenderer.cjs.js","sources":["../../../../packages/core/src/renderer/createDOMRenderer.ts"],"sourcesContent":["import { injectDevTools, isDevToolsEnabled, debugData } from '../devtools';\nimport { GriffelRenderer, StyleBucketName } from '../types';\nimport { getStyleSheetForBucket } from './getStyleSheetForBucket';\n\nlet lastIndex = 0;\n\nexport interface CreateDOMRendererOptions {\n  /**\n   * A map of attributes that's passed to the generated style elements. Is useful to set \"nonce\" attribute.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n   */\n  styleElementAttributes?: Record<string, string>;\n\n  /**\n   * A filter run before CSS rule insertion to systematically remove CSS rules at render time.\n   * This can be used to forbid specific rules from being written to the style sheet at run time without\n   * affecting build time styles.\n   *\n   * ⚠️ Keep the filter as performant as possible to avoid negative performance impacts to your application.\n   * ⚠️ This API is unstable and can be removed from the library at any time.\n   */\n  unstable_filterCSSRule?: (cssRule: string) => boolean;\n}\n\n/**\n * Creates a new instances of a renderer.\n *\n * @public\n */\nexport function createDOMRenderer(\n  target: Document | undefined = typeof document === 'undefined' ? undefined : document,\n  options: CreateDOMRendererOptions = {},\n): GriffelRenderer {\n  const { unstable_filterCSSRule } = options;\n  const renderer: GriffelRenderer = {\n    insertionCache: {},\n    styleElements: {},\n\n    id: `d${lastIndex++}`,\n\n    insertCSSRules(cssRules) {\n      for (let i = 0, l = cssRules.length; i < l; i++) {\n        const { cssRule: ruleCSS, bucket: styleBucketName } = cssRules[i];\n        if (renderer.insertionCache[ruleCSS]) {\n          continue;\n        }\n\n        const sheet =\n          target && getStyleSheetForBucket(styleBucketName, target, renderer, options.styleElementAttributes);\n        renderer.insertionCache[ruleCSS] = styleBucketName as StyleBucketName;\n        if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n          debugData.addCSSRule(ruleCSS);\n        }\n\n        if (sheet) {\n          try {\n            if (unstable_filterCSSRule) {\n              if (unstable_filterCSSRule(ruleCSS)) {\n                sheet.insertRule(ruleCSS, sheet.cssRules.length);\n              }\n            } else {\n              sheet.insertRule(ruleCSS, sheet.cssRules.length);\n            }\n          } catch (e) {\n            // We've disabled these warnings due to false-positive errors with browser prefixes\n            if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {\n              // eslint-disable-next-line no-console\n              console.error(`There was a problem inserting the following rule: \"${ruleCSS}\"`, e);\n            }\n          }\n        }\n      }\n    },\n  };\n\n  if (target && process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n    injectDevTools(target);\n  }\n\n  return renderer;\n}\n\n/**\n * Suffixes to be ignored in case of error\n */\nconst ignoreSuffixes = [\n  '-moz-placeholder',\n  '-moz-focus-inner',\n  '-moz-focusring',\n  '-ms-input-placeholder',\n  '-moz-read-write',\n  '-moz-read-only',\n].join('|');\nconst ignoreSuffixesRegex = new RegExp(`:(${ignoreSuffixes})`);\n"],"names":["lastIndex","createDOMRenderer","target","document","undefined","options","unstable_filterCSSRule","renderer","insertionCache","styleElements","id","insertCSSRules","cssRules","i","l","length","cssRule","ruleCSS","bucket","styleBucketName","sheet","getStyleSheetForBucket","styleElementAttributes","process","env","NODE_ENV","isDevToolsEnabled","debugData","addCSSRule","insertRule","e","ignoreSuffixesRegex","test","console","error","injectDevTools","ignoreSuffixes","join","RegExp"],"mappings":";;;;;;;;;AAIA,IAAIA,SAAS,GAAG,CAAhB;AAqBA;;;;;;SAKgBC,kBACdC,SAA+B,OAAOC,QAAP,KAAoB,WAApB,GAAkCC,SAAlC,GAA8CD,UAC7EE,UAAoC;AAEpC,QAAM;AAAEC,IAAAA;AAAF,MAA6BD,OAAnC;AACA,QAAME,QAAQ,GAAoB;AAChCC,IAAAA,cAAc,EAAE,EADgB;AAEhCC,IAAAA,aAAa,EAAE,EAFiB;AAIhCC,IAAAA,EAAE,MAAMV,SAAS,IAJe;;AAMhCW,IAAAA,cAAc,CAACC,QAAD;AACZ,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCF,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,cAAM;AAAEG,UAAAA,OAAO,EAAEC,OAAX;AAAoBC,UAAAA,MAAM,EAAEC;AAA5B,YAAgDP,QAAQ,CAACC,CAAD,CAA9D;;AACA,YAAIN,QAAQ,CAACC,cAAT,CAAwBS,OAAxB,CAAJ,EAAsC;AACpC;AACD;;AAED,cAAMG,KAAK,GACTlB,MAAM,IAAImB,6CAAsB,CAACF,eAAD,EAAkBjB,MAAlB,EAA0BK,QAA1B,EAAoCF,OAAO,CAACiB,sBAA5C,CADlC;AAEAf,QAAAA,QAAQ,CAACC,cAAT,CAAwBS,OAAxB,IAAmCE,eAAnC;;AACA,YAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,mCAA7C,EAAgE;AAC9DC,UAAAA,eAAS,CAACC,UAAV,CAAqBX,OAArB;AACD;;AAED,YAAIG,KAAJ,EAAW;AACT,cAAI;AACF,gBAAId,sBAAJ,EAA4B;AAC1B,kBAAIA,sBAAsB,CAACW,OAAD,CAA1B,EAAqC;AACnCG,gBAAAA,KAAK,CAACS,UAAN,CAAiBZ,OAAjB,EAA0BG,KAAK,CAACR,QAAN,CAAeG,MAAzC;AACD;AACF,aAJD,MAIO;AACLK,cAAAA,KAAK,CAACS,UAAN,CAAiBZ,OAAjB,EAA0BG,KAAK,CAACR,QAAN,CAAeG,MAAzC;AACD;AACF,WARD,CAQE,OAAOe,CAAP,EAAU;AACV;AACA,gBAAIP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACM,mBAAmB,CAACC,IAApB,CAAyBf,OAAzB,CAA9C,EAAiF;AAC/E;AACAgB,cAAAA,OAAO,CAACC,KAAR,uDAAoEjB,UAApE,EAAgFa,CAAhF;AACD;AACF;AACF;AACF;AACF;;AAtC+B,GAAlC;;AAyCA,MAAI5B,MAAM,IAAIqB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAnC,IAAmDC,mCAAvD,EAA0E;AACxES,IAAAA,6BAAc,CAACjC,MAAD,CAAd;AACD;;AAED,SAAOK,QAAP;AACD;AAED;;;;AAGA,MAAM6B,cAAc,gBAAG,CACrB,kBADqB,EAErB,kBAFqB,EAGrB,gBAHqB,EAIrB,uBAJqB,EAKrB,iBALqB,EAMrB,gBANqB,EAOrBC,IAPqB,CAOhB,GAPgB,CAAvB;AAQA,MAAMN,mBAAmB,gBAAG,IAAIO,MAAJ,MAAgBF,iBAAhB,CAA5B;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js b/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js
index 242ed0a..990750b 100644
--- a/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js
+++ b/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js
@@ -20,39 +20,37 @@ function createDOMRenderer(target = typeof document === 'undefined' ? undefined
     id: `d${lastIndex++}`,
 
     insertCSSRules(cssRules) {
-      // eslint-disable-next-line guard-for-in
-      for (const styleBucketName in cssRules) {
-        const cssRulesForBucket = cssRules[styleBucketName];
-        const sheet = target && getStyleSheetForBucket(styleBucketName, target, renderer, options.styleElementAttributes); // This is a hot path in rendering styles: ".length" is cached in "l" var to avoid accesses the property
+      for (let i = 0, l = cssRules.length; i < l; i++) {
+        const {
+          cssRule: ruleCSS,
+          bucket: styleBucketName
+        } = cssRules[i];
 
-        for (let i = 0, l = cssRulesForBucket.length; i < l; i++) {
-          const ruleCSS = cssRulesForBucket[i];
-
-          if (renderer.insertionCache[ruleCSS]) {
-            continue;
-          }
+        if (renderer.insertionCache[ruleCSS]) {
+          continue;
+        }
 
-          renderer.insertionCache[ruleCSS] = styleBucketName;
+        const sheet = target && getStyleSheetForBucket(styleBucketName, target, renderer, options.styleElementAttributes);
+        renderer.insertionCache[ruleCSS] = styleBucketName;
 
-          if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {
-            debugData.addCSSRule(ruleCSS);
-          }
+        if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {
+          debugData.addCSSRule(ruleCSS);
+        }
 
-          if (sheet) {
-            try {
-              if (unstable_filterCSSRule) {
-                if (unstable_filterCSSRule(ruleCSS)) {
-                  sheet.insertRule(ruleCSS, sheet.cssRules.length);
-                }
-              } else {
+        if (sheet) {
+          try {
+            if (unstable_filterCSSRule) {
+              if (unstable_filterCSSRule(ruleCSS)) {
                 sheet.insertRule(ruleCSS, sheet.cssRules.length);
               }
-            } catch (e) {
-              // We've disabled these warnings due to false-positive errors with browser prefixes
-              if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {
-                // eslint-disable-next-line no-console
-                console.error(`There was a problem inserting the following rule: "${ruleCSS}"`, e);
-              }
+            } else {
+              sheet.insertRule(ruleCSS, sheet.cssRules.length);
+            }
+          } catch (e) {
+            // We've disabled these warnings due to false-positive errors with browser prefixes
+            if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {
+              // eslint-disable-next-line no-console
+              console.error(`There was a problem inserting the following rule: "${ruleCSS}"`, e);
             }
           }
         }
diff --git a/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js.map b/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js.map
index 37785da..548acd5 100644
--- a/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js.map
+++ b/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"createDOMRenderer.esm.js","sources":["../../../../packages/core/src/renderer/createDOMRenderer.ts"],"sourcesContent":["import { injectDevTools, isDevToolsEnabled, debugData } from '../devtools';\nimport { GriffelRenderer, StyleBucketName } from '../types';\nimport { getStyleSheetForBucket } from './getStyleSheetForBucket';\n\nlet lastIndex = 0;\n\nexport interface CreateDOMRendererOptions {\n  /**\n   * A map of attributes that's passed to the generated style elements. Is useful to set \"nonce\" attribute.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n   */\n  styleElementAttributes?: Record<string, string>;\n\n  /**\n   * A filter run before CSS rule insertion to systematically remove CSS rules at render time.\n   * This can be used to forbid specific rules from being written to the style sheet at run time without\n   * affecting build time styles.\n   *\n   * ⚠️ Keep the filter as performant as possible to avoid negative performance impacts to your application.\n   * ⚠️ This API is unstable and can be removed from the library at any time.\n   */\n  unstable_filterCSSRule?: (cssRule: string) => boolean;\n}\n\n/**\n * Creates a new instances of a renderer.\n *\n * @public\n */\nexport function createDOMRenderer(\n  target: Document | undefined = typeof document === 'undefined' ? undefined : document,\n  options: CreateDOMRendererOptions = {},\n): GriffelRenderer {\n  const { unstable_filterCSSRule } = options;\n  const renderer: GriffelRenderer = {\n    insertionCache: {},\n    styleElements: {},\n\n    id: `d${lastIndex++}`,\n\n    insertCSSRules(cssRules) {\n      // eslint-disable-next-line guard-for-in\n      for (const styleBucketName in cssRules) {\n        const cssRulesForBucket = cssRules[styleBucketName as StyleBucketName]!;\n        const sheet =\n          target &&\n          getStyleSheetForBucket(styleBucketName as StyleBucketName, target, renderer, options.styleElementAttributes);\n\n        // This is a hot path in rendering styles: \".length\" is cached in \"l\" var to avoid accesses the property\n        for (let i = 0, l = cssRulesForBucket.length; i < l; i++) {\n          const ruleCSS = cssRulesForBucket[i];\n\n          if (renderer.insertionCache[ruleCSS]) {\n            continue;\n          }\n\n          renderer.insertionCache[ruleCSS] = styleBucketName as StyleBucketName;\n          if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n            debugData.addCSSRule(ruleCSS);\n          }\n\n          if (sheet) {\n            try {\n              if (unstable_filterCSSRule) {\n                if (unstable_filterCSSRule(ruleCSS)) {\n                  sheet.insertRule(ruleCSS, sheet.cssRules.length);\n                }\n              } else {\n                sheet.insertRule(ruleCSS, sheet.cssRules.length);\n              }\n            } catch (e) {\n              // We've disabled these warnings due to false-positive errors with browser prefixes\n              if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {\n                // eslint-disable-next-line no-console\n                console.error(`There was a problem inserting the following rule: \"${ruleCSS}\"`, e);\n              }\n            }\n          }\n        }\n      }\n    },\n  };\n\n  if (target && process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n    injectDevTools(target);\n  }\n\n  return renderer;\n}\n\n/**\n * Suffixes to be ignored in case of error\n */\nconst ignoreSuffixes = [\n  '-moz-placeholder',\n  '-moz-focus-inner',\n  '-moz-focusring',\n  '-ms-input-placeholder',\n  '-moz-read-write',\n  '-moz-read-only',\n].join('|');\nconst ignoreSuffixesRegex = new RegExp(`:(${ignoreSuffixes})`);\n"],"names":["lastIndex","createDOMRenderer","target","document","undefined","options","unstable_filterCSSRule","renderer","insertionCache","styleElements","id","insertCSSRules","cssRules","styleBucketName","cssRulesForBucket","sheet","getStyleSheetForBucket","styleElementAttributes","i","l","length","ruleCSS","process","env","NODE_ENV","isDevToolsEnabled","debugData","addCSSRule","insertRule","e","ignoreSuffixesRegex","test","console","error","injectDevTools","ignoreSuffixes","join","RegExp"],"mappings":";;;;;AAIA,IAAIA,SAAS,GAAG,CAAhB;AAqBA;;;;;;SAKgBC,kBACdC,SAA+B,OAAOC,QAAP,KAAoB,WAApB,GAAkCC,SAAlC,GAA8CD,UAC7EE,UAAoC;AAEpC,QAAM;AAAEC,IAAAA;AAAF,MAA6BD,OAAnC;AACA,QAAME,QAAQ,GAAoB;AAChCC,IAAAA,cAAc,EAAE,EADgB;AAEhCC,IAAAA,aAAa,EAAE,EAFiB;AAIhCC,IAAAA,EAAE,MAAMV,SAAS,IAJe;;AAMhCW,IAAAA,cAAc,CAACC,QAAD;AACZ;AACA,WAAK,MAAMC,eAAX,IAA8BD,QAA9B,EAAwC;AACtC,cAAME,iBAAiB,GAAGF,QAAQ,CAACC,eAAD,CAAlC;AACA,cAAME,KAAK,GACTb,MAAM,IACNc,sBAAsB,CAACH,eAAD,EAAqCX,MAArC,EAA6CK,QAA7C,EAAuDF,OAAO,CAACY,sBAA/D,CAFxB,CAFsC;;AAOtC,aAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGL,iBAAiB,CAACM,MAAtC,EAA8CF,CAAC,GAAGC,CAAlD,EAAqDD,CAAC,EAAtD,EAA0D;AACxD,gBAAMG,OAAO,GAAGP,iBAAiB,CAACI,CAAD,CAAjC;;AAEA,cAAIX,QAAQ,CAACC,cAAT,CAAwBa,OAAxB,CAAJ,EAAsC;AACpC;AACD;;AAEDd,UAAAA,QAAQ,CAACC,cAAT,CAAwBa,OAAxB,IAAmCR,eAAnC;;AACA,cAAIS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,iBAA7C,EAAgE;AAC9DC,YAAAA,SAAS,CAACC,UAAV,CAAqBN,OAArB;AACD;;AAED,cAAIN,KAAJ,EAAW;AACT,gBAAI;AACF,kBAAIT,sBAAJ,EAA4B;AAC1B,oBAAIA,sBAAsB,CAACe,OAAD,CAA1B,EAAqC;AACnCN,kBAAAA,KAAK,CAACa,UAAN,CAAiBP,OAAjB,EAA0BN,KAAK,CAACH,QAAN,CAAeQ,MAAzC;AACD;AACF,eAJD,MAIO;AACLL,gBAAAA,KAAK,CAACa,UAAN,CAAiBP,OAAjB,EAA0BN,KAAK,CAACH,QAAN,CAAeQ,MAAzC;AACD;AACF,aARD,CAQE,OAAOS,CAAP,EAAU;AACV;AACA,kBAAIP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACM,mBAAmB,CAACC,IAApB,CAAyBV,OAAzB,CAA9C,EAAiF;AAC/E;AACAW,gBAAAA,OAAO,CAACC,KAAR,uDAAoEZ,UAApE,EAAgFQ,CAAhF;AACD;AACF;AACF;AACF;AACF;AACF;;AA9C+B,GAAlC;;AAiDA,MAAI3B,MAAM,IAAIoB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAnC,IAAmDC,iBAAvD,EAA0E;AACxES,IAAAA,cAAc,CAAChC,MAAD,CAAd;AACD;;AAED,SAAOK,QAAP;AACD;AAED;;;;AAGA,MAAM4B,cAAc,gBAAG,CACrB,kBADqB,EAErB,kBAFqB,EAGrB,gBAHqB,EAIrB,uBAJqB,EAKrB,iBALqB,EAMrB,gBANqB,EAOrBC,IAPqB,CAOhB,GAPgB,CAAvB;AAQA,MAAMN,mBAAmB,gBAAG,IAAIO,MAAJ,MAAgBF,iBAAhB,CAA5B;;;;"}
\ No newline at end of file
+{"version":3,"file":"createDOMRenderer.esm.js","sources":["../../../../packages/core/src/renderer/createDOMRenderer.ts"],"sourcesContent":["import { injectDevTools, isDevToolsEnabled, debugData } from '../devtools';\nimport { GriffelRenderer, StyleBucketName } from '../types';\nimport { getStyleSheetForBucket } from './getStyleSheetForBucket';\n\nlet lastIndex = 0;\n\nexport interface CreateDOMRendererOptions {\n  /**\n   * A map of attributes that's passed to the generated style elements. Is useful to set \"nonce\" attribute.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n   */\n  styleElementAttributes?: Record<string, string>;\n\n  /**\n   * A filter run before CSS rule insertion to systematically remove CSS rules at render time.\n   * This can be used to forbid specific rules from being written to the style sheet at run time without\n   * affecting build time styles.\n   *\n   * ⚠️ Keep the filter as performant as possible to avoid negative performance impacts to your application.\n   * ⚠️ This API is unstable and can be removed from the library at any time.\n   */\n  unstable_filterCSSRule?: (cssRule: string) => boolean;\n}\n\n/**\n * Creates a new instances of a renderer.\n *\n * @public\n */\nexport function createDOMRenderer(\n  target: Document | undefined = typeof document === 'undefined' ? undefined : document,\n  options: CreateDOMRendererOptions = {},\n): GriffelRenderer {\n  const { unstable_filterCSSRule } = options;\n  const renderer: GriffelRenderer = {\n    insertionCache: {},\n    styleElements: {},\n\n    id: `d${lastIndex++}`,\n\n    insertCSSRules(cssRules) {\n      for (let i = 0, l = cssRules.length; i < l; i++) {\n        const { cssRule: ruleCSS, bucket: styleBucketName } = cssRules[i];\n        if (renderer.insertionCache[ruleCSS]) {\n          continue;\n        }\n\n        const sheet =\n          target && getStyleSheetForBucket(styleBucketName, target, renderer, options.styleElementAttributes);\n        renderer.insertionCache[ruleCSS] = styleBucketName as StyleBucketName;\n        if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n          debugData.addCSSRule(ruleCSS);\n        }\n\n        if (sheet) {\n          try {\n            if (unstable_filterCSSRule) {\n              if (unstable_filterCSSRule(ruleCSS)) {\n                sheet.insertRule(ruleCSS, sheet.cssRules.length);\n              }\n            } else {\n              sheet.insertRule(ruleCSS, sheet.cssRules.length);\n            }\n          } catch (e) {\n            // We've disabled these warnings due to false-positive errors with browser prefixes\n            if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {\n              // eslint-disable-next-line no-console\n              console.error(`There was a problem inserting the following rule: \"${ruleCSS}\"`, e);\n            }\n          }\n        }\n      }\n    },\n  };\n\n  if (target && process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n    injectDevTools(target);\n  }\n\n  return renderer;\n}\n\n/**\n * Suffixes to be ignored in case of error\n */\nconst ignoreSuffixes = [\n  '-moz-placeholder',\n  '-moz-focus-inner',\n  '-moz-focusring',\n  '-ms-input-placeholder',\n  '-moz-read-write',\n  '-moz-read-only',\n].join('|');\nconst ignoreSuffixesRegex = new RegExp(`:(${ignoreSuffixes})`);\n"],"names":["lastIndex","createDOMRenderer","target","document","undefined","options","unstable_filterCSSRule","renderer","insertionCache","styleElements","id","insertCSSRules","cssRules","i","l","length","cssRule","ruleCSS","bucket","styleBucketName","sheet","getStyleSheetForBucket","styleElementAttributes","process","env","NODE_ENV","isDevToolsEnabled","debugData","addCSSRule","insertRule","e","ignoreSuffixesRegex","test","console","error","injectDevTools","ignoreSuffixes","join","RegExp"],"mappings":";;;;;AAIA,IAAIA,SAAS,GAAG,CAAhB;AAqBA;;;;;;SAKgBC,kBACdC,SAA+B,OAAOC,QAAP,KAAoB,WAApB,GAAkCC,SAAlC,GAA8CD,UAC7EE,UAAoC;AAEpC,QAAM;AAAEC,IAAAA;AAAF,MAA6BD,OAAnC;AACA,QAAME,QAAQ,GAAoB;AAChCC,IAAAA,cAAc,EAAE,EADgB;AAEhCC,IAAAA,aAAa,EAAE,EAFiB;AAIhCC,IAAAA,EAAE,MAAMV,SAAS,IAJe;;AAMhCW,IAAAA,cAAc,CAACC,QAAD;AACZ,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCF,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,cAAM;AAAEG,UAAAA,OAAO,EAAEC,OAAX;AAAoBC,UAAAA,MAAM,EAAEC;AAA5B,YAAgDP,QAAQ,CAACC,CAAD,CAA9D;;AACA,YAAIN,QAAQ,CAACC,cAAT,CAAwBS,OAAxB,CAAJ,EAAsC;AACpC;AACD;;AAED,cAAMG,KAAK,GACTlB,MAAM,IAAImB,sBAAsB,CAACF,eAAD,EAAkBjB,MAAlB,EAA0BK,QAA1B,EAAoCF,OAAO,CAACiB,sBAA5C,CADlC;AAEAf,QAAAA,QAAQ,CAACC,cAAT,CAAwBS,OAAxB,IAAmCE,eAAnC;;AACA,YAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,iBAA7C,EAAgE;AAC9DC,UAAAA,SAAS,CAACC,UAAV,CAAqBX,OAArB;AACD;;AAED,YAAIG,KAAJ,EAAW;AACT,cAAI;AACF,gBAAId,sBAAJ,EAA4B;AAC1B,kBAAIA,sBAAsB,CAACW,OAAD,CAA1B,EAAqC;AACnCG,gBAAAA,KAAK,CAACS,UAAN,CAAiBZ,OAAjB,EAA0BG,KAAK,CAACR,QAAN,CAAeG,MAAzC;AACD;AACF,aAJD,MAIO;AACLK,cAAAA,KAAK,CAACS,UAAN,CAAiBZ,OAAjB,EAA0BG,KAAK,CAACR,QAAN,CAAeG,MAAzC;AACD;AACF,WARD,CAQE,OAAOe,CAAP,EAAU;AACV;AACA,gBAAIP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACM,mBAAmB,CAACC,IAApB,CAAyBf,OAAzB,CAA9C,EAAiF;AAC/E;AACAgB,cAAAA,OAAO,CAACC,KAAR,uDAAoEjB,UAApE,EAAgFa,CAAhF;AACD;AACF;AACF;AACF;AACF;;AAtC+B,GAAlC;;AAyCA,MAAI5B,MAAM,IAAIqB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAnC,IAAmDC,iBAAvD,EAA0E;AACxES,IAAAA,cAAc,CAACjC,MAAD,CAAd;AACD;;AAED,SAAOK,QAAP;AACD;AAED;;;;AAGA,MAAM6B,cAAc,gBAAG,CACrB,kBADqB,EAErB,kBAFqB,EAGrB,gBAHqB,EAIrB,uBAJqB,EAKrB,iBALqB,EAMrB,gBANqB,EAOrBC,IAPqB,CAOhB,GAPgB,CAAvB;AAQA,MAAMN,mBAAmB,gBAAG,IAAIO,MAAJ,MAAgBF,iBAAhB,CAA5B;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/resolveStyleRulesForSlots.cjs.js b/node_modules/@griffel/core/resolveStyleRulesForSlots.cjs.js
index 73b6de9..a3524e9 100644
--- a/node_modules/@griffel/core/resolveStyleRulesForSlots.cjs.js
+++ b/node_modules/@griffel/core/resolveStyleRulesForSlots.cjs.js
@@ -14,15 +14,13 @@ var resolveStyleRules = require('./runtime/resolveStyleRules.cjs.js');
 
 function resolveStyleRulesForSlots(stylesBySlots) {
   const classesMapBySlot = {};
-  const cssRules = {}; // eslint-disable-next-line guard-for-in
+  const cssRules = []; // eslint-disable-next-line guard-for-in
 
   for (const slotName in stylesBySlots) {
     const slotStyles = stylesBySlots[slotName];
-    const [cssClassMap, cssRulesByBucket] = resolveStyleRules.resolveStyleRules(slotStyles);
+    const [cssClassMap, cssRultsFoSlot] = resolveStyleRules.resolveStyleRules(slotStyles);
     classesMapBySlot[slotName] = cssClassMap;
-    Object.keys(cssRulesByBucket).forEach(styleBucketName => {
-      cssRules[styleBucketName] = (cssRules[styleBucketName] || []).concat(cssRulesByBucket[styleBucketName]);
-    });
+    cssRules.push(...cssRultsFoSlot);
   }
 
   return [classesMapBySlot, cssRules];
diff --git a/node_modules/@griffel/core/resolveStyleRulesForSlots.cjs.js.map b/node_modules/@griffel/core/resolveStyleRulesForSlots.cjs.js.map
index 27c72ac..e33beaf 100644
--- a/node_modules/@griffel/core/resolveStyleRulesForSlots.cjs.js.map
+++ b/node_modules/@griffel/core/resolveStyleRulesForSlots.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"resolveStyleRulesForSlots.cjs.js","sources":["../../../packages/core/src/resolveStyleRulesForSlots.ts"],"sourcesContent":["import { resolveStyleRules } from './runtime/resolveStyleRules';\nimport { CSSClassesMapBySlot, CSSRulesByBucket, GriffelStyle, StyleBucketName, StylesBySlots } from './types';\n\n/**\n * Calls resolveStyleRules() for each slot, is also used by build time transform.\n *\n * @param stylesBySlots - An object with makeStyles rules where a key is a slot name\n *\n * @return - A tuple with an object classnames mapping where a key is a slot name and an array with CSS rules\n */\nexport function resolveStyleRulesForSlots<Slots extends string | number>(\n  stylesBySlots: StylesBySlots<Slots>,\n): [CSSClassesMapBySlot<Slots>, CSSRulesByBucket] {\n  const classesMapBySlot = {} as CSSClassesMapBySlot<Slots>;\n  const cssRules: CSSRulesByBucket = {};\n\n  // eslint-disable-next-line guard-for-in\n  for (const slotName in stylesBySlots) {\n    const slotStyles: GriffelStyle = stylesBySlots[slotName];\n    const [cssClassMap, cssRulesByBucket] = resolveStyleRules(slotStyles);\n\n    classesMapBySlot[slotName] = cssClassMap;\n\n    (Object.keys(cssRulesByBucket) as StyleBucketName[]).forEach(styleBucketName => {\n      cssRules[styleBucketName] = (cssRules[styleBucketName] || []).concat(cssRulesByBucket[styleBucketName]!);\n    });\n  }\n\n  return [classesMapBySlot, cssRules];\n}\n"],"names":["resolveStyleRulesForSlots","stylesBySlots","classesMapBySlot","cssRules","slotName","slotStyles","cssClassMap","cssRulesByBucket","resolveStyleRules","Object","keys","forEach","styleBucketName","concat"],"mappings":";;;;;;AAGA;;;;;;;;SAOgBA,0BACdC;AAEA,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,QAAQ,GAAqB,EAAnC;;AAGA,OAAK,MAAMC,QAAX,IAAuBH,aAAvB,EAAsC;AACpC,UAAMI,UAAU,GAAiBJ,aAAa,CAACG,QAAD,CAA9C;AACA,UAAM,CAACE,WAAD,EAAcC,gBAAd,IAAkCC,mCAAiB,CAACH,UAAD,CAAzD;AAEAH,IAAAA,gBAAgB,CAACE,QAAD,CAAhB,GAA6BE,WAA7B;AAECG,IAAAA,MAAM,CAACC,IAAP,CAAYH,gBAAZ,EAAoDI,OAApD,CAA4DC,eAAe;AAC1ET,MAAAA,QAAQ,CAACS,eAAD,CAAR,GAA4B,CAACT,QAAQ,CAACS,eAAD,CAAR,IAA6B,EAA9B,EAAkCC,MAAlC,CAAyCN,gBAAgB,CAACK,eAAD,CAAzD,CAA5B;AACD,KAFA;AAGF;;AAED,SAAO,CAACV,gBAAD,EAAmBC,QAAnB,CAAP;AACD;;;;"}
\ No newline at end of file
+{"version":3,"file":"resolveStyleRulesForSlots.cjs.js","sources":["../../../packages/core/src/resolveStyleRulesForSlots.ts"],"sourcesContent":["import { resolveStyleRules } from './runtime/resolveStyleRules';\nimport { CSSClassesMapBySlot, CSSRuleData, GriffelStyle, StylesBySlots } from './types';\n\n/**\n * Calls resolveStyleRules() for each slot, is also used by build time transform.\n *\n * @param stylesBySlots - An object with makeStyles rules where a key is a slot name\n *\n * @return - A tuple with an object classnames mapping where a key is a slot name and an array with CSS rules\n */\nexport function resolveStyleRulesForSlots<Slots extends string | number>(\n  stylesBySlots: StylesBySlots<Slots>,\n): [CSSClassesMapBySlot<Slots>, CSSRuleData[]] {\n  const classesMapBySlot = {} as CSSClassesMapBySlot<Slots>;\n  const cssRules: CSSRuleData[] = [];\n\n  // eslint-disable-next-line guard-for-in\n  for (const slotName in stylesBySlots) {\n    const slotStyles: GriffelStyle = stylesBySlots[slotName];\n    const [cssClassMap, cssRultsFoSlot] = resolveStyleRules(slotStyles);\n\n    classesMapBySlot[slotName] = cssClassMap;\n    cssRules.push(...cssRultsFoSlot);\n  }\n\n  return [classesMapBySlot, cssRules];\n}\n"],"names":["resolveStyleRulesForSlots","stylesBySlots","classesMapBySlot","cssRules","slotName","slotStyles","cssClassMap","cssRultsFoSlot","resolveStyleRules","push"],"mappings":";;;;;;AAGA;;;;;;;;SAOgBA,0BACdC;AAEA,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,QAAQ,GAAkB,EAAhC;;AAGA,OAAK,MAAMC,QAAX,IAAuBH,aAAvB,EAAsC;AACpC,UAAMI,UAAU,GAAiBJ,aAAa,CAACG,QAAD,CAA9C;AACA,UAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCC,mCAAiB,CAACH,UAAD,CAAvD;AAEAH,IAAAA,gBAAgB,CAACE,QAAD,CAAhB,GAA6BE,WAA7B;AACAH,IAAAA,QAAQ,CAACM,IAAT,CAAc,GAAGF,cAAjB;AACD;;AAED,SAAO,CAACL,gBAAD,EAAmBC,QAAnB,CAAP;AACD;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/resolveStyleRulesForSlots.d.ts b/node_modules/@griffel/core/resolveStyleRulesForSlots.d.ts
index f77b09b..3cf2a3b 100644
--- a/node_modules/@griffel/core/resolveStyleRulesForSlots.d.ts
+++ b/node_modules/@griffel/core/resolveStyleRulesForSlots.d.ts
@@ -1,4 +1,4 @@
-import { CSSClassesMapBySlot, CSSRulesByBucket, StylesBySlots } from './types';
+import { CSSClassesMapBySlot, CSSRuleData, StylesBySlots } from './types';
 /**
  * Calls resolveStyleRules() for each slot, is also used by build time transform.
  *
@@ -6,4 +6,4 @@ import { CSSClassesMapBySlot, CSSRulesByBucket, StylesBySlots } from './types';
  *
  * @return - A tuple with an object classnames mapping where a key is a slot name and an array with CSS rules
  */
-export declare function resolveStyleRulesForSlots<Slots extends string | number>(stylesBySlots: StylesBySlots<Slots>): [CSSClassesMapBySlot<Slots>, CSSRulesByBucket];
+export declare function resolveStyleRulesForSlots<Slots extends string | number>(stylesBySlots: StylesBySlots<Slots>): [CSSClassesMapBySlot<Slots>, CSSRuleData[]];
diff --git a/node_modules/@griffel/core/resolveStyleRulesForSlots.esm.js b/node_modules/@griffel/core/resolveStyleRulesForSlots.esm.js
index b5e04cc..f947740 100644
--- a/node_modules/@griffel/core/resolveStyleRulesForSlots.esm.js
+++ b/node_modules/@griffel/core/resolveStyleRulesForSlots.esm.js
@@ -10,15 +10,13 @@ import { resolveStyleRules } from './runtime/resolveStyleRules.esm.js';
 
 function resolveStyleRulesForSlots(stylesBySlots) {
   const classesMapBySlot = {};
-  const cssRules = {}; // eslint-disable-next-line guard-for-in
+  const cssRules = []; // eslint-disable-next-line guard-for-in
 
   for (const slotName in stylesBySlots) {
     const slotStyles = stylesBySlots[slotName];
-    const [cssClassMap, cssRulesByBucket] = resolveStyleRules(slotStyles);
+    const [cssClassMap, cssRultsFoSlot] = resolveStyleRules(slotStyles);
     classesMapBySlot[slotName] = cssClassMap;
-    Object.keys(cssRulesByBucket).forEach(styleBucketName => {
-      cssRules[styleBucketName] = (cssRules[styleBucketName] || []).concat(cssRulesByBucket[styleBucketName]);
-    });
+    cssRules.push(...cssRultsFoSlot);
   }
 
   return [classesMapBySlot, cssRules];
diff --git a/node_modules/@griffel/core/resolveStyleRulesForSlots.esm.js.map b/node_modules/@griffel/core/resolveStyleRulesForSlots.esm.js.map
index 95d6684..50018be 100644
--- a/node_modules/@griffel/core/resolveStyleRulesForSlots.esm.js.map
+++ b/node_modules/@griffel/core/resolveStyleRulesForSlots.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"resolveStyleRulesForSlots.esm.js","sources":["../../../packages/core/src/resolveStyleRulesForSlots.ts"],"sourcesContent":["import { resolveStyleRules } from './runtime/resolveStyleRules';\nimport { CSSClassesMapBySlot, CSSRulesByBucket, GriffelStyle, StyleBucketName, StylesBySlots } from './types';\n\n/**\n * Calls resolveStyleRules() for each slot, is also used by build time transform.\n *\n * @param stylesBySlots - An object with makeStyles rules where a key is a slot name\n *\n * @return - A tuple with an object classnames mapping where a key is a slot name and an array with CSS rules\n */\nexport function resolveStyleRulesForSlots<Slots extends string | number>(\n  stylesBySlots: StylesBySlots<Slots>,\n): [CSSClassesMapBySlot<Slots>, CSSRulesByBucket] {\n  const classesMapBySlot = {} as CSSClassesMapBySlot<Slots>;\n  const cssRules: CSSRulesByBucket = {};\n\n  // eslint-disable-next-line guard-for-in\n  for (const slotName in stylesBySlots) {\n    const slotStyles: GriffelStyle = stylesBySlots[slotName];\n    const [cssClassMap, cssRulesByBucket] = resolveStyleRules(slotStyles);\n\n    classesMapBySlot[slotName] = cssClassMap;\n\n    (Object.keys(cssRulesByBucket) as StyleBucketName[]).forEach(styleBucketName => {\n      cssRules[styleBucketName] = (cssRules[styleBucketName] || []).concat(cssRulesByBucket[styleBucketName]!);\n    });\n  }\n\n  return [classesMapBySlot, cssRules];\n}\n"],"names":["resolveStyleRulesForSlots","stylesBySlots","classesMapBySlot","cssRules","slotName","slotStyles","cssClassMap","cssRulesByBucket","resolveStyleRules","Object","keys","forEach","styleBucketName","concat"],"mappings":";;AAGA;;;;;;;;SAOgBA,0BACdC;AAEA,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,QAAQ,GAAqB,EAAnC;;AAGA,OAAK,MAAMC,QAAX,IAAuBH,aAAvB,EAAsC;AACpC,UAAMI,UAAU,GAAiBJ,aAAa,CAACG,QAAD,CAA9C;AACA,UAAM,CAACE,WAAD,EAAcC,gBAAd,IAAkCC,iBAAiB,CAACH,UAAD,CAAzD;AAEAH,IAAAA,gBAAgB,CAACE,QAAD,CAAhB,GAA6BE,WAA7B;AAECG,IAAAA,MAAM,CAACC,IAAP,CAAYH,gBAAZ,EAAoDI,OAApD,CAA4DC,eAAe;AAC1ET,MAAAA,QAAQ,CAACS,eAAD,CAAR,GAA4B,CAACT,QAAQ,CAACS,eAAD,CAAR,IAA6B,EAA9B,EAAkCC,MAAlC,CAAyCN,gBAAgB,CAACK,eAAD,CAAzD,CAA5B;AACD,KAFA;AAGF;;AAED,SAAO,CAACV,gBAAD,EAAmBC,QAAnB,CAAP;AACD;;;;"}
\ No newline at end of file
+{"version":3,"file":"resolveStyleRulesForSlots.esm.js","sources":["../../../packages/core/src/resolveStyleRulesForSlots.ts"],"sourcesContent":["import { resolveStyleRules } from './runtime/resolveStyleRules';\nimport { CSSClassesMapBySlot, CSSRuleData, GriffelStyle, StylesBySlots } from './types';\n\n/**\n * Calls resolveStyleRules() for each slot, is also used by build time transform.\n *\n * @param stylesBySlots - An object with makeStyles rules where a key is a slot name\n *\n * @return - A tuple with an object classnames mapping where a key is a slot name and an array with CSS rules\n */\nexport function resolveStyleRulesForSlots<Slots extends string | number>(\n  stylesBySlots: StylesBySlots<Slots>,\n): [CSSClassesMapBySlot<Slots>, CSSRuleData[]] {\n  const classesMapBySlot = {} as CSSClassesMapBySlot<Slots>;\n  const cssRules: CSSRuleData[] = [];\n\n  // eslint-disable-next-line guard-for-in\n  for (const slotName in stylesBySlots) {\n    const slotStyles: GriffelStyle = stylesBySlots[slotName];\n    const [cssClassMap, cssRultsFoSlot] = resolveStyleRules(slotStyles);\n\n    classesMapBySlot[slotName] = cssClassMap;\n    cssRules.push(...cssRultsFoSlot);\n  }\n\n  return [classesMapBySlot, cssRules];\n}\n"],"names":["resolveStyleRulesForSlots","stylesBySlots","classesMapBySlot","cssRules","slotName","slotStyles","cssClassMap","cssRultsFoSlot","resolveStyleRules","push"],"mappings":";;AAGA;;;;;;;;SAOgBA,0BACdC;AAEA,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,QAAQ,GAAkB,EAAhC;;AAGA,OAAK,MAAMC,QAAX,IAAuBH,aAAvB,EAAsC;AACpC,UAAMI,UAAU,GAAiBJ,aAAa,CAACG,QAAD,CAA9C;AACA,UAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCC,iBAAiB,CAACH,UAAD,CAAvD;AAEAH,IAAAA,gBAAgB,CAACE,QAAD,CAAhB,GAA6BE,WAA7B;AACAH,IAAAA,QAAQ,CAACM,IAAT,CAAc,GAAGF,cAAjB;AACD;;AAED,SAAO,CAACL,gBAAD,EAAmBC,QAAnB,CAAP;AACD;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/runtime/resolveStaticStyleRules.cjs.js b/node_modules/@griffel/core/runtime/resolveStaticStyleRules.cjs.js
index 9b0d576..5fcf08b 100644
--- a/node_modules/@griffel/core/runtime/resolveStaticStyleRules.cjs.js
+++ b/node_modules/@griffel/core/runtime/resolveStaticStyleRules.cjs.js
@@ -5,7 +5,7 @@ Object.defineProperty(exports, '__esModule', { value: true });
 var compileStaticCSS = require('./compileStaticCSS.cjs.js');
 var compileCSS = require('./compileCSS.cjs.js');
 
-function resolveStaticStyleRules(styles, result = {}) {
+function resolveStaticStyleRules(styles, result = []) {
   if (typeof styles === 'string') {
     const cssRules = compileCSS.compileCSSRules(styles);
 
@@ -24,10 +24,11 @@ function resolveStaticStyleRules(styles, result = {}) {
   return result;
 }
 
-function addResolvedStyles(cssRule, result = {}) {
-  // 👇 static rules should be inserted into default bucket
-  result.d = result.d || [];
-  result.d.push(cssRule);
+function addResolvedStyles(cssRule, result = []) {
+  result.push({
+    cssRule,
+    bucket: 'd'
+  });
 }
 
 exports.resolveStaticStyleRules = resolveStaticStyleRules;
diff --git a/node_modules/@griffel/core/runtime/resolveStaticStyleRules.cjs.js.map b/node_modules/@griffel/core/runtime/resolveStaticStyleRules.cjs.js.map
index 678af25..a4733b8 100644
--- a/node_modules/@griffel/core/runtime/resolveStaticStyleRules.cjs.js.map
+++ b/node_modules/@griffel/core/runtime/resolveStaticStyleRules.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"resolveStaticStyleRules.cjs.js","sources":["../../../../packages/core/src/runtime/resolveStaticStyleRules.ts"],"sourcesContent":["import { GriffelStaticStyles, CSSRulesByBucket } from '../types';\nimport { compileStaticCSS } from './compileStaticCSS';\nimport { compileCSSRules } from './compileCSS';\n\nexport function resolveStaticStyleRules(styles: GriffelStaticStyles, result: CSSRulesByBucket = {}): CSSRulesByBucket {\n  if (typeof styles === 'string') {\n    const cssRules = compileCSSRules(styles);\n\n    for (const rule of cssRules) {\n      addResolvedStyles(rule, result);\n    }\n  } else {\n    // eslint-disable-next-line guard-for-in\n    for (const property in styles) {\n      const value = styles[property];\n      const staticCSS = compileStaticCSS(property, value);\n\n      addResolvedStyles(staticCSS, result);\n    }\n  }\n\n  return result;\n}\n\nfunction addResolvedStyles(cssRule: string, result: CSSRulesByBucket = {}): void {\n  // 👇 static rules should be inserted into default bucket\n  result.d = result.d || [];\n  result.d.push(cssRule);\n}\n"],"names":["resolveStaticStyleRules","styles","result","cssRules","compileCSSRules","rule","addResolvedStyles","property","value","staticCSS","compileStaticCSS","cssRule","d","push"],"mappings":";;;;;;;SAIgBA,wBAAwBC,QAA6BC,SAA2B;AAC9F,MAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,UAAME,QAAQ,GAAGC,0BAAe,CAACH,MAAD,CAAhC;;AAEA,SAAK,MAAMI,IAAX,IAAmBF,QAAnB,EAA6B;AAC3BG,MAAAA,iBAAiB,CAACD,IAAD,EAAOH,MAAP,CAAjB;AACD;AACF,GAND,MAMO;AACL;AACA,SAAK,MAAMK,QAAX,IAAuBN,MAAvB,EAA+B;AAC7B,YAAMO,KAAK,GAAGP,MAAM,CAACM,QAAD,CAApB;AACA,YAAME,SAAS,GAAGC,iCAAgB,CAACH,QAAD,EAAWC,KAAX,CAAlC;AAEAF,MAAAA,iBAAiB,CAACG,SAAD,EAAYP,MAAZ,CAAjB;AACD;AACF;;AAED,SAAOA,MAAP;AACD;;AAED,SAASI,iBAAT,CAA2BK,OAA3B,EAA4CT,SAA2B,EAAvE;AACE;AACAA,EAAAA,MAAM,CAACU,CAAP,GAAWV,MAAM,CAACU,CAAP,IAAY,EAAvB;AACAV,EAAAA,MAAM,CAACU,CAAP,CAASC,IAAT,CAAcF,OAAd;AACD;;;;"}
\ No newline at end of file
+{"version":3,"file":"resolveStaticStyleRules.cjs.js","sources":["../../../../packages/core/src/runtime/resolveStaticStyleRules.ts"],"sourcesContent":["import { GriffelStaticStyles, CSSRuleData } from '../types';\nimport { compileStaticCSS } from './compileStaticCSS';\nimport { compileCSSRules } from './compileCSS';\n\nexport function resolveStaticStyleRules(styles: GriffelStaticStyles, result: CSSRuleData[] = []): CSSRuleData[] {\n  if (typeof styles === 'string') {\n    const cssRules = compileCSSRules(styles);\n\n    for (const rule of cssRules) {\n      addResolvedStyles(rule, result);\n    }\n  } else {\n    // eslint-disable-next-line guard-for-in\n    for (const property in styles) {\n      const value = styles[property];\n      const staticCSS = compileStaticCSS(property, value);\n\n      addResolvedStyles(staticCSS, result);\n    }\n  }\n\n  return result;\n}\n\nfunction addResolvedStyles(cssRule: string, result: CSSRuleData[] = []): void {\n  result.push({ cssRule, bucket: 'd' });\n}\n"],"names":["resolveStaticStyleRules","styles","result","cssRules","compileCSSRules","rule","addResolvedStyles","property","value","staticCSS","compileStaticCSS","cssRule","push","bucket"],"mappings":";;;;;;;SAIgBA,wBAAwBC,QAA6BC,SAAwB;AAC3F,MAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,UAAME,QAAQ,GAAGC,0BAAe,CAACH,MAAD,CAAhC;;AAEA,SAAK,MAAMI,IAAX,IAAmBF,QAAnB,EAA6B;AAC3BG,MAAAA,iBAAiB,CAACD,IAAD,EAAOH,MAAP,CAAjB;AACD;AACF,GAND,MAMO;AACL;AACA,SAAK,MAAMK,QAAX,IAAuBN,MAAvB,EAA+B;AAC7B,YAAMO,KAAK,GAAGP,MAAM,CAACM,QAAD,CAApB;AACA,YAAME,SAAS,GAAGC,iCAAgB,CAACH,QAAD,EAAWC,KAAX,CAAlC;AAEAF,MAAAA,iBAAiB,CAACG,SAAD,EAAYP,MAAZ,CAAjB;AACD;AACF;;AAED,SAAOA,MAAP;AACD;;AAED,SAASI,iBAAT,CAA2BK,OAA3B,EAA4CT,SAAwB,EAApE;AACEA,EAAAA,MAAM,CAACU,IAAP,CAAY;AAAED,IAAAA,OAAF;AAAWE,IAAAA,MAAM,EAAE;AAAnB,GAAZ;AACD;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/runtime/resolveStaticStyleRules.d.ts b/node_modules/@griffel/core/runtime/resolveStaticStyleRules.d.ts
index 89c09ad..5c9509c 100644
--- a/node_modules/@griffel/core/runtime/resolveStaticStyleRules.d.ts
+++ b/node_modules/@griffel/core/runtime/resolveStaticStyleRules.d.ts
@@ -1,2 +1,2 @@
-import { GriffelStaticStyles, CSSRulesByBucket } from '../types';
-export declare function resolveStaticStyleRules(styles: GriffelStaticStyles, result?: CSSRulesByBucket): CSSRulesByBucket;
+import { GriffelStaticStyles, CSSRuleData } from '../types';
+export declare function resolveStaticStyleRules(styles: GriffelStaticStyles, result?: CSSRuleData[]): CSSRuleData[];
diff --git a/node_modules/@griffel/core/runtime/resolveStaticStyleRules.esm.js b/node_modules/@griffel/core/runtime/resolveStaticStyleRules.esm.js
index 624b7d3..27fe543 100644
--- a/node_modules/@griffel/core/runtime/resolveStaticStyleRules.esm.js
+++ b/node_modules/@griffel/core/runtime/resolveStaticStyleRules.esm.js
@@ -1,7 +1,7 @@
 import { compileStaticCSS } from './compileStaticCSS.esm.js';
 import { compileCSSRules } from './compileCSS.esm.js';
 
-function resolveStaticStyleRules(styles, result = {}) {
+function resolveStaticStyleRules(styles, result = []) {
   if (typeof styles === 'string') {
     const cssRules = compileCSSRules(styles);
 
@@ -20,10 +20,11 @@ function resolveStaticStyleRules(styles, result = {}) {
   return result;
 }
 
-function addResolvedStyles(cssRule, result = {}) {
-  // 👇 static rules should be inserted into default bucket
-  result.d = result.d || [];
-  result.d.push(cssRule);
+function addResolvedStyles(cssRule, result = []) {
+  result.push({
+    cssRule,
+    bucket: 'd'
+  });
 }
 
 export { resolveStaticStyleRules };
diff --git a/node_modules/@griffel/core/runtime/resolveStaticStyleRules.esm.js.map b/node_modules/@griffel/core/runtime/resolveStaticStyleRules.esm.js.map
index 0e6744f..a454819 100644
--- a/node_modules/@griffel/core/runtime/resolveStaticStyleRules.esm.js.map
+++ b/node_modules/@griffel/core/runtime/resolveStaticStyleRules.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"resolveStaticStyleRules.esm.js","sources":["../../../../packages/core/src/runtime/resolveStaticStyleRules.ts"],"sourcesContent":["import { GriffelStaticStyles, CSSRulesByBucket } from '../types';\nimport { compileStaticCSS } from './compileStaticCSS';\nimport { compileCSSRules } from './compileCSS';\n\nexport function resolveStaticStyleRules(styles: GriffelStaticStyles, result: CSSRulesByBucket = {}): CSSRulesByBucket {\n  if (typeof styles === 'string') {\n    const cssRules = compileCSSRules(styles);\n\n    for (const rule of cssRules) {\n      addResolvedStyles(rule, result);\n    }\n  } else {\n    // eslint-disable-next-line guard-for-in\n    for (const property in styles) {\n      const value = styles[property];\n      const staticCSS = compileStaticCSS(property, value);\n\n      addResolvedStyles(staticCSS, result);\n    }\n  }\n\n  return result;\n}\n\nfunction addResolvedStyles(cssRule: string, result: CSSRulesByBucket = {}): void {\n  // 👇 static rules should be inserted into default bucket\n  result.d = result.d || [];\n  result.d.push(cssRule);\n}\n"],"names":["resolveStaticStyleRules","styles","result","cssRules","compileCSSRules","rule","addResolvedStyles","property","value","staticCSS","compileStaticCSS","cssRule","d","push"],"mappings":";;;SAIgBA,wBAAwBC,QAA6BC,SAA2B;AAC9F,MAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,UAAME,QAAQ,GAAGC,eAAe,CAACH,MAAD,CAAhC;;AAEA,SAAK,MAAMI,IAAX,IAAmBF,QAAnB,EAA6B;AAC3BG,MAAAA,iBAAiB,CAACD,IAAD,EAAOH,MAAP,CAAjB;AACD;AACF,GAND,MAMO;AACL;AACA,SAAK,MAAMK,QAAX,IAAuBN,MAAvB,EAA+B;AAC7B,YAAMO,KAAK,GAAGP,MAAM,CAACM,QAAD,CAApB;AACA,YAAME,SAAS,GAAGC,gBAAgB,CAACH,QAAD,EAAWC,KAAX,CAAlC;AAEAF,MAAAA,iBAAiB,CAACG,SAAD,EAAYP,MAAZ,CAAjB;AACD;AACF;;AAED,SAAOA,MAAP;AACD;;AAED,SAASI,iBAAT,CAA2BK,OAA3B,EAA4CT,SAA2B,EAAvE;AACE;AACAA,EAAAA,MAAM,CAACU,CAAP,GAAWV,MAAM,CAACU,CAAP,IAAY,EAAvB;AACAV,EAAAA,MAAM,CAACU,CAAP,CAASC,IAAT,CAAcF,OAAd;AACD;;;;"}
\ No newline at end of file
+{"version":3,"file":"resolveStaticStyleRules.esm.js","sources":["../../../../packages/core/src/runtime/resolveStaticStyleRules.ts"],"sourcesContent":["import { GriffelStaticStyles, CSSRuleData } from '../types';\nimport { compileStaticCSS } from './compileStaticCSS';\nimport { compileCSSRules } from './compileCSS';\n\nexport function resolveStaticStyleRules(styles: GriffelStaticStyles, result: CSSRuleData[] = []): CSSRuleData[] {\n  if (typeof styles === 'string') {\n    const cssRules = compileCSSRules(styles);\n\n    for (const rule of cssRules) {\n      addResolvedStyles(rule, result);\n    }\n  } else {\n    // eslint-disable-next-line guard-for-in\n    for (const property in styles) {\n      const value = styles[property];\n      const staticCSS = compileStaticCSS(property, value);\n\n      addResolvedStyles(staticCSS, result);\n    }\n  }\n\n  return result;\n}\n\nfunction addResolvedStyles(cssRule: string, result: CSSRuleData[] = []): void {\n  result.push({ cssRule, bucket: 'd' });\n}\n"],"names":["resolveStaticStyleRules","styles","result","cssRules","compileCSSRules","rule","addResolvedStyles","property","value","staticCSS","compileStaticCSS","cssRule","push","bucket"],"mappings":";;;SAIgBA,wBAAwBC,QAA6BC,SAAwB;AAC3F,MAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,UAAME,QAAQ,GAAGC,eAAe,CAACH,MAAD,CAAhC;;AAEA,SAAK,MAAMI,IAAX,IAAmBF,QAAnB,EAA6B;AAC3BG,MAAAA,iBAAiB,CAACD,IAAD,EAAOH,MAAP,CAAjB;AACD;AACF,GAND,MAMO;AACL;AACA,SAAK,MAAMK,QAAX,IAAuBN,MAAvB,EAA+B;AAC7B,YAAMO,KAAK,GAAGP,MAAM,CAACM,QAAD,CAApB;AACA,YAAME,SAAS,GAAGC,gBAAgB,CAACH,QAAD,EAAWC,KAAX,CAAlC;AAEAF,MAAAA,iBAAiB,CAACG,SAAD,EAAYP,MAAZ,CAAjB;AACD;AACF;;AAED,SAAOA,MAAP;AACD;;AAED,SAASI,iBAAT,CAA2BK,OAA3B,EAA4CT,SAAwB,EAApE;AACEA,EAAAA,MAAM,CAACU,IAAP,CAAY;AAAED,IAAAA,OAAF;AAAWE,IAAAA,MAAM,EAAE;AAAnB,GAAZ;AACD;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/runtime/resolveStyleRules.cjs.js b/node_modules/@griffel/core/runtime/resolveStyleRules.cjs.js
index fc85e18..2800823 100644
--- a/node_modules/@griffel/core/runtime/resolveStyleRules.cjs.js
+++ b/node_modules/@griffel/core/runtime/resolveStyleRules.cjs.js
@@ -26,12 +26,17 @@ function pushToClassesMap(classesMap, propertyKey, ltrClassname, rtlClassname) {
   classesMap[propertyKey] = rtlClassname ? [ltrClassname, rtlClassname] : ltrClassname;
 }
 
-function pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS) {
-  cssRulesByBucket[styleBucketName] = cssRulesByBucket[styleBucketName] || [];
-  cssRulesByBucket[styleBucketName].push(ltrCSS);
+function pushToCSSRules(cssRules, styleBucketName, ltrCSS, rtlCSS) {
+  cssRules.push({
+    cssRule: ltrCSS,
+    bucket: styleBucketName
+  });
 
   if (rtlCSS) {
-    cssRulesByBucket[styleBucketName].push(rtlCSS);
+    cssRules.push({
+      cssRule: rtlCSS,
+      bucket: styleBucketName
+    });
   }
 }
 /**
@@ -41,7 +46,7 @@ function pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS) {
  */
 
 
-function resolveStyleRules(styles, pseudo = '', media = '', layer = '', support = '', cssClassesMap = {}, cssRulesByBucket = {}, rtlValue) {
+function resolveStyleRules(styles, pseudo = '', media = '', layer = '', support = '', cssClassesMap = {}, cssRules = [], rtlValue) {
   // eslint-disable-next-line guard-for-in
   for (const property in styles) {
     // eslint-disable-next-line no-prototype-builtins
@@ -99,7 +104,7 @@ function resolveStyleRules(styles, pseudo = '', media = '', layer = '', support
         value
       }, rtlCompileOptions));
       pushToClassesMap(cssClassesMap, key, className, rtlClassName);
-      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS);
+      pushToCSSRules(cssRules, styleBucketName, ltrCSS, rtlCSS);
     } else if (property === 'animationName') {
       const animationNameValue = Array.isArray(value) ? value : [value];
       const animationNames = [];
@@ -122,7 +127,7 @@ function resolveStyleRules(styles, pseudo = '', media = '', layer = '', support
         }
 
         for (let i = 0; i < keyframeRules.length; i++) {
-          pushToCSSRules(cssRulesByBucket, // keyframes styles should be inserted into own bucket
+          pushToCSSRules(cssRules, // keyframes styles should be inserted into own bucket
           'k', keyframeRules[i], rtlKeyframeRules[i]);
         }
 
@@ -132,7 +137,7 @@ function resolveStyleRules(styles, pseudo = '', media = '', layer = '', support
 
       resolveStyleRules({
         animationName: animationNames.join(', ')
-      }, pseudo, media, layer, support, cssClassesMap, cssRulesByBucket, rtlAnimationNames.join(', '));
+      }, pseudo, media, layer, support, cssClassesMap, cssRules, rtlAnimationNames.join(', '));
     } else if (Array.isArray(value)) {
       // not animationName property but array in the value => fallback values
       if (value.length === 0) {
@@ -192,19 +197,19 @@ function resolveStyleRules(styles, pseudo = '', media = '', layer = '', support
         value: value
       }, rtlCompileOptions));
       pushToClassesMap(cssClassesMap, key, className, rtlClassName);
-      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS);
+      pushToCSSRules(cssRules, styleBucketName, ltrCSS, rtlCSS);
     } else if (isObject.isObject(value)) {
       if (isNestedSelector.isNestedSelector(property)) {
-        resolveStyleRules(value, pseudo + normalizeNestedProperty.normalizeNestedProperty(property), media, layer, support, cssClassesMap, cssRulesByBucket);
+        resolveStyleRules(value, pseudo + normalizeNestedProperty.normalizeNestedProperty(property), media, layer, support, cssClassesMap, cssRules);
       } else if (isMediaQuerySelector.isMediaQuerySelector(property)) {
         const combinedMediaQuery = generateCombinedMediaQuery.generateCombinedQuery(media, property.slice(6).trim());
-        resolveStyleRules(value, pseudo, combinedMediaQuery, layer, support, cssClassesMap, cssRulesByBucket);
+        resolveStyleRules(value, pseudo, combinedMediaQuery, layer, support, cssClassesMap, cssRules);
       } else if (isLayerSelector.isLayerSelector(property)) {
         const combinedLayerQuery = (layer ? `${layer}.` : '') + property.slice(6).trim();
-        resolveStyleRules(value, pseudo, media, combinedLayerQuery, support, cssClassesMap, cssRulesByBucket);
+        resolveStyleRules(value, pseudo, media, combinedLayerQuery, support, cssClassesMap, cssRules);
       } else if (isSupportQuerySelector.isSupportQuerySelector(property)) {
         const combinedSupportQuery = generateCombinedMediaQuery.generateCombinedQuery(support, property.slice(9).trim());
-        resolveStyleRules(value, pseudo, media, layer, combinedSupportQuery, cssClassesMap, cssRulesByBucket);
+        resolveStyleRules(value, pseudo, media, layer, combinedSupportQuery, cssClassesMap, cssRules);
       } else {
         if (process.env.NODE_ENV !== 'production') {
           // eslint-disable-next-line no-console
@@ -214,7 +219,7 @@ function resolveStyleRules(styles, pseudo = '', media = '', layer = '', support
     }
   }
 
-  return [cssClassesMap, cssRulesByBucket];
+  return [cssClassesMap, cssRules];
 }
 
 exports.resolveStyleRules = resolveStyleRules;
diff --git a/node_modules/@griffel/core/runtime/resolveStyleRules.cjs.js.map b/node_modules/@griffel/core/runtime/resolveStyleRules.cjs.js.map
index 196cd4a..0edf6b0 100644
--- a/node_modules/@griffel/core/runtime/resolveStyleRules.cjs.js.map
+++ b/node_modules/@griffel/core/runtime/resolveStyleRules.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"resolveStyleRules.cjs.js","sources":["../../../../packages/core/src/runtime/resolveStyleRules.ts"],"sourcesContent":["import hashString from '@emotion/hash';\nimport { convert, convertProperty } from 'rtl-css-js/core';\n\nimport { HASH_PREFIX } from '../constants';\nimport { GriffelStyle, CSSClassesMap, CSSRulesByBucket, StyleBucketName, GriffelAnimation } from '../types';\nimport { compileCSS, CompileCSSOptions } from './compileCSS';\nimport { compileKeyframeRule, compileKeyframesCSS } from './compileKeyframeCSS';\nimport { generateCombinedQuery } from './utils/generateCombinedMediaQuery';\nimport { isMediaQuerySelector } from './utils/isMediaQuerySelector';\nimport { isLayerSelector } from './utils/isLayerSelector';\nimport { isNestedSelector } from './utils/isNestedSelector';\nimport { isSupportQuerySelector } from './utils/isSupportQuerySelector';\nimport { normalizeNestedProperty } from './utils/normalizeNestedProperty';\nimport { isObject } from './utils/isObject';\nimport { getStyleBucketName } from './getStyleBucketName';\nimport { hashClassName } from './utils/hashClassName';\nimport { hashPropertyKey } from './utils/hashPropertyKey';\nimport { UNSUPPORTED_CSS_PROPERTIES } from '..';\n\nfunction pushToClassesMap(\n  classesMap: CSSClassesMap,\n  propertyKey: string,\n  ltrClassname: string,\n  rtlClassname: string | undefined,\n) {\n  classesMap[propertyKey] = rtlClassname ? [ltrClassname!, rtlClassname] : ltrClassname;\n}\n\nfunction pushToCSSRules(\n  cssRulesByBucket: CSSRulesByBucket,\n  styleBucketName: StyleBucketName,\n  ltrCSS: string,\n  rtlCSS: string | undefined,\n) {\n  cssRulesByBucket[styleBucketName] = cssRulesByBucket[styleBucketName] || [];\n  cssRulesByBucket[styleBucketName]!.push(ltrCSS);\n\n  if (rtlCSS) {\n    cssRulesByBucket[styleBucketName]!.push(rtlCSS);\n  }\n}\n\n/**\n * Transforms input styles to classes maps & CSS rules.\n *\n * @internal\n */\nexport function resolveStyleRules(\n  styles: GriffelStyle,\n  pseudo = '',\n  media = '',\n  layer = '',\n  support = '',\n  cssClassesMap: CSSClassesMap = {},\n  cssRulesByBucket: CSSRulesByBucket = {},\n  rtlValue?: string,\n): [CSSClassesMap, CSSRulesByBucket] {\n  // eslint-disable-next-line guard-for-in\n  for (const property in styles) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (UNSUPPORTED_CSS_PROPERTIES.hasOwnProperty(property)) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(\n          [\n            `@griffel/react: You are using unsupported shorthand CSS property \"${property}\". ` +\n              `Please check your \"makeStyles\" calls, there *should not* be following:`,\n            ' '.repeat(2) + `makeStyles({`,\n            ' '.repeat(4) + `[slot]: { ${property}: \"${styles[property as keyof GriffelStyle]}\" }`,\n            ' '.repeat(2) + `})`,\n            '',\n            'Learn why CSS shorthands are not supported: https://aka.ms/griffel-css-shorthands',\n          ].join('\\n'),\n        );\n      }\n      continue;\n    }\n\n    const value = styles[property as keyof GriffelStyle];\n\n    // eslint-disable-next-line eqeqeq\n    if (value == null) {\n      continue;\n    }\n\n    if (typeof value === 'string' || typeof value === 'number') {\n      // uniq key based on a hash of property & selector, used for merging later\n      const key = hashPropertyKey(pseudo, media, support, property);\n      const className = hashClassName({\n        media,\n        layer,\n        value: value.toString(),\n        support,\n        pseudo,\n        property,\n      });\n\n      const rtlDefinition = (rtlValue && { key: property, value: rtlValue }) || convertProperty(property, value);\n      const flippedInRtl = rtlDefinition.key !== property || rtlDefinition.value !== value;\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            value: rtlDefinition.value.toString(),\n            property: rtlDefinition.key,\n            pseudo,\n            media,\n            layer,\n            support,\n          })\n        : undefined;\n      const rtlCompileOptions: Partial<CompileCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinition.key,\n            rtlValue: rtlDefinition.value,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(pseudo, layer, media, support);\n      const [ltrCSS, rtlCSS] = compileCSS({\n        className,\n        media,\n        layer,\n        pseudo,\n        property,\n        support,\n        value,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS);\n    } else if (property === 'animationName') {\n      const animationNameValue = Array.isArray(value) ? (value as GriffelAnimation[]) : [value as GriffelAnimation];\n\n      const animationNames: string[] = [];\n      const rtlAnimationNames: string[] = [];\n\n      for (const keyframeObject of animationNameValue) {\n        const keyframeCSS = compileKeyframeRule(keyframeObject);\n        const rtlKeyframeCSS = compileKeyframeRule(convert(keyframeObject));\n\n        const animationName = HASH_PREFIX + hashString(keyframeCSS);\n        let rtlAnimationName: string;\n\n        const keyframeRules = compileKeyframesCSS(animationName, keyframeCSS);\n        let rtlKeyframeRules: string[] = [];\n\n        if (keyframeCSS === rtlKeyframeCSS) {\n          // If CSS for LTR & RTL are same we will re-use animationName from LTR to avoid duplication of rules in output\n          rtlAnimationName = animationName;\n        } else {\n          rtlAnimationName = HASH_PREFIX + hashString(rtlKeyframeCSS);\n          rtlKeyframeRules = compileKeyframesCSS(rtlAnimationName, rtlKeyframeCSS);\n        }\n\n        for (let i = 0; i < keyframeRules.length; i++) {\n          pushToCSSRules(\n            cssRulesByBucket,\n            // keyframes styles should be inserted into own bucket\n            'k',\n            keyframeRules[i],\n            rtlKeyframeRules[i],\n          );\n        }\n\n        animationNames.push(animationName);\n        rtlAnimationNames.push(rtlAnimationName);\n      }\n\n      resolveStyleRules(\n        { animationName: animationNames.join(', ') },\n        pseudo,\n        media,\n        layer,\n        support,\n        cssClassesMap,\n        cssRulesByBucket,\n        rtlAnimationNames.join(', '),\n      );\n    } else if (Array.isArray(value)) {\n      // not animationName property but array in the value => fallback values\n      if (value.length === 0) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            `makeStyles(): An empty array was passed as input to \"${property}\", the property will be omitted in the styles.`,\n          );\n        }\n        continue;\n      }\n\n      const key = hashPropertyKey(pseudo, media, support, property);\n      const className = hashClassName({\n        media,\n        layer,\n        value: value.map(v => (v ?? '').toString()).join(';'),\n        support,\n        pseudo,\n        property,\n      });\n\n      const rtlDefinitions = value.map(v => convertProperty(property, v!));\n\n      const rtlPropertyConsistent = !rtlDefinitions.some(v => v.key !== rtlDefinitions[0].key);\n\n      if (!rtlPropertyConsistent) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            'makeStyles(): mixing CSS fallback values which result in multiple CSS properties in RTL is not supported.',\n          );\n        }\n        continue;\n      }\n\n      const flippedInRtl = rtlDefinitions[0].key !== property || rtlDefinitions.some((v, i) => v.value !== value[i]);\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            value: rtlDefinitions.map(v => (v?.value ?? '').toString()).join(';'),\n            property: rtlDefinitions[0].key,\n            pseudo,\n            layer,\n            media,\n            support,\n          })\n        : undefined;\n\n      const rtlCompileOptions: Partial<CompileCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinitions[0].key,\n            rtlValue: rtlDefinitions.map(d => d.value) as Array<string | number>,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(pseudo, layer, media, support);\n      const [ltrCSS, rtlCSS] = compileCSS({\n        className,\n        media,\n        layer,\n        pseudo,\n        property,\n        support,\n        value: value as Array<string | number>,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS);\n    } else if (isObject(value)) {\n      if (isNestedSelector(property)) {\n        resolveStyleRules(\n          value as GriffelStyle,\n          pseudo + normalizeNestedProperty(property),\n          media,\n          layer,\n          support,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isMediaQuerySelector(property)) {\n        const combinedMediaQuery = generateCombinedQuery(media, property.slice(6).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          pseudo,\n          combinedMediaQuery,\n          layer,\n          support,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isLayerSelector(property)) {\n        const combinedLayerQuery = (layer ? `${layer}.` : '') + property.slice(6).trim();\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          pseudo,\n          media,\n          combinedLayerQuery,\n          support,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isSupportQuerySelector(property)) {\n        const combinedSupportQuery = generateCombinedQuery(support, property.slice(9).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          pseudo,\n          media,\n          layer,\n          combinedSupportQuery,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.error(`Please fix the unresolved style rule: \\n ${property} \\n ${JSON.stringify(value, null, 2)}\"`);\n        }\n      }\n    }\n  }\n\n  return [cssClassesMap, cssRulesByBucket];\n}\n"],"names":["pushToClassesMap","classesMap","propertyKey","ltrClassname","rtlClassname","pushToCSSRules","cssRulesByBucket","styleBucketName","ltrCSS","rtlCSS","push","resolveStyleRules","styles","pseudo","media","layer","support","cssClassesMap","rtlValue","property","UNSUPPORTED_CSS_PROPERTIES","hasOwnProperty","process","env","NODE_ENV","console","error","repeat","join","value","key","hashPropertyKey","className","hashClassName","toString","rtlDefinition","convertProperty","flippedInRtl","rtlClassName","undefined","rtlCompileOptions","rtlProperty","getStyleBucketName","compileCSS","animationNameValue","Array","isArray","animationNames","rtlAnimationNames","keyframeObject","keyframeCSS","compileKeyframeRule","rtlKeyframeCSS","convert","animationName","HASH_PREFIX","hashString","rtlAnimationName","keyframeRules","compileKeyframesCSS","rtlKeyframeRules","i","length","warn","map","v","rtlDefinitions","rtlPropertyConsistent","some","d","isObject","isNestedSelector","normalizeNestedProperty","isMediaQuerySelector","combinedMediaQuery","generateCombinedQuery","slice","trim","isLayerSelector","combinedLayerQuery","isSupportQuerySelector","combinedSupportQuery","JSON","stringify"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"resolveStyleRules.cjs.js","sources":["../../../../packages/core/src/runtime/resolveStyleRules.ts"],"sourcesContent":["import hashString from '@emotion/hash';\nimport { convert, convertProperty } from 'rtl-css-js/core';\n\nimport { HASH_PREFIX } from '../constants';\nimport { GriffelStyle, CSSClassesMap, StyleBucketName, GriffelAnimation, CSSRuleData } from '../types';\nimport { compileCSS, CompileCSSOptions } from './compileCSS';\nimport { compileKeyframeRule, compileKeyframesCSS } from './compileKeyframeCSS';\nimport { generateCombinedQuery } from './utils/generateCombinedMediaQuery';\nimport { isMediaQuerySelector } from './utils/isMediaQuerySelector';\nimport { isLayerSelector } from './utils/isLayerSelector';\nimport { isNestedSelector } from './utils/isNestedSelector';\nimport { isSupportQuerySelector } from './utils/isSupportQuerySelector';\nimport { normalizeNestedProperty } from './utils/normalizeNestedProperty';\nimport { isObject } from './utils/isObject';\nimport { getStyleBucketName } from './getStyleBucketName';\nimport { hashClassName } from './utils/hashClassName';\nimport { hashPropertyKey } from './utils/hashPropertyKey';\nimport { UNSUPPORTED_CSS_PROPERTIES } from '..';\n\nfunction pushToClassesMap(\n  classesMap: CSSClassesMap,\n  propertyKey: string,\n  ltrClassname: string,\n  rtlClassname: string | undefined,\n) {\n  classesMap[propertyKey] = rtlClassname ? [ltrClassname!, rtlClassname] : ltrClassname;\n}\n\nfunction pushToCSSRules(\n  cssRules: CSSRuleData[],\n  styleBucketName: StyleBucketName,\n  ltrCSS: string,\n  rtlCSS: string | undefined,\n) {\n  cssRules.push({ cssRule: ltrCSS, bucket: styleBucketName });\n  if (rtlCSS) {\n    cssRules.push({ cssRule: rtlCSS, bucket: styleBucketName });\n  }\n}\n\n/**\n * Transforms input styles to classes maps & CSS rules.\n *\n * @internal\n */\nexport function resolveStyleRules(\n  styles: GriffelStyle,\n  pseudo = '',\n  media = '',\n  layer = '',\n  support = '',\n  cssClassesMap: CSSClassesMap = {},\n  cssRules: CSSRuleData[] = [],\n  rtlValue?: string,\n): [CSSClassesMap, CSSRuleData[]] {\n  // eslint-disable-next-line guard-for-in\n  for (const property in styles) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (UNSUPPORTED_CSS_PROPERTIES.hasOwnProperty(property)) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(\n          [\n            `@griffel/react: You are using unsupported shorthand CSS property \"${property}\". ` +\n              `Please check your \"makeStyles\" calls, there *should not* be following:`,\n            ' '.repeat(2) + `makeStyles({`,\n            ' '.repeat(4) + `[slot]: { ${property}: \"${styles[property as keyof GriffelStyle]}\" }`,\n            ' '.repeat(2) + `})`,\n            '',\n            'Learn why CSS shorthands are not supported: https://aka.ms/griffel-css-shorthands',\n          ].join('\\n'),\n        );\n      }\n      continue;\n    }\n\n    const value = styles[property as keyof GriffelStyle];\n\n    // eslint-disable-next-line eqeqeq\n    if (value == null) {\n      continue;\n    }\n\n    if (typeof value === 'string' || typeof value === 'number') {\n      // uniq key based on a hash of property & selector, used for merging later\n      const key = hashPropertyKey(pseudo, media, support, property);\n      const className = hashClassName({\n        media,\n        layer,\n        value: value.toString(),\n        support,\n        pseudo,\n        property,\n      });\n\n      const rtlDefinition = (rtlValue && { key: property, value: rtlValue }) || convertProperty(property, value);\n      const flippedInRtl = rtlDefinition.key !== property || rtlDefinition.value !== value;\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            value: rtlDefinition.value.toString(),\n            property: rtlDefinition.key,\n            pseudo,\n            media,\n            layer,\n            support,\n          })\n        : undefined;\n      const rtlCompileOptions: Partial<CompileCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinition.key,\n            rtlValue: rtlDefinition.value,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(pseudo, layer, media, support);\n      const [ltrCSS, rtlCSS] = compileCSS({\n        className,\n        media,\n        layer,\n        pseudo,\n        property,\n        support,\n        value,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRules, styleBucketName, ltrCSS, rtlCSS);\n    } else if (property === 'animationName') {\n      const animationNameValue = Array.isArray(value) ? (value as GriffelAnimation[]) : [value as GriffelAnimation];\n\n      const animationNames: string[] = [];\n      const rtlAnimationNames: string[] = [];\n\n      for (const keyframeObject of animationNameValue) {\n        const keyframeCSS = compileKeyframeRule(keyframeObject);\n        const rtlKeyframeCSS = compileKeyframeRule(convert(keyframeObject));\n\n        const animationName = HASH_PREFIX + hashString(keyframeCSS);\n        let rtlAnimationName: string;\n\n        const keyframeRules = compileKeyframesCSS(animationName, keyframeCSS);\n        let rtlKeyframeRules: string[] = [];\n\n        if (keyframeCSS === rtlKeyframeCSS) {\n          // If CSS for LTR & RTL are same we will re-use animationName from LTR to avoid duplication of rules in output\n          rtlAnimationName = animationName;\n        } else {\n          rtlAnimationName = HASH_PREFIX + hashString(rtlKeyframeCSS);\n          rtlKeyframeRules = compileKeyframesCSS(rtlAnimationName, rtlKeyframeCSS);\n        }\n\n        for (let i = 0; i < keyframeRules.length; i++) {\n          pushToCSSRules(\n            cssRules,\n            // keyframes styles should be inserted into own bucket\n            'k',\n            keyframeRules[i],\n            rtlKeyframeRules[i],\n          );\n        }\n\n        animationNames.push(animationName);\n        rtlAnimationNames.push(rtlAnimationName);\n      }\n\n      resolveStyleRules(\n        { animationName: animationNames.join(', ') },\n        pseudo,\n        media,\n        layer,\n        support,\n        cssClassesMap,\n        cssRules,\n        rtlAnimationNames.join(', '),\n      );\n    } else if (Array.isArray(value)) {\n      // not animationName property but array in the value => fallback values\n      if (value.length === 0) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            `makeStyles(): An empty array was passed as input to \"${property}\", the property will be omitted in the styles.`,\n          );\n        }\n        continue;\n      }\n\n      const key = hashPropertyKey(pseudo, media, support, property);\n      const className = hashClassName({\n        media,\n        layer,\n        value: value.map(v => (v ?? '').toString()).join(';'),\n        support,\n        pseudo,\n        property,\n      });\n\n      const rtlDefinitions = value.map(v => convertProperty(property, v!));\n\n      const rtlPropertyConsistent = !rtlDefinitions.some(v => v.key !== rtlDefinitions[0].key);\n\n      if (!rtlPropertyConsistent) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            'makeStyles(): mixing CSS fallback values which result in multiple CSS properties in RTL is not supported.',\n          );\n        }\n        continue;\n      }\n\n      const flippedInRtl = rtlDefinitions[0].key !== property || rtlDefinitions.some((v, i) => v.value !== value[i]);\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            value: rtlDefinitions.map(v => (v?.value ?? '').toString()).join(';'),\n            property: rtlDefinitions[0].key,\n            pseudo,\n            layer,\n            media,\n            support,\n          })\n        : undefined;\n\n      const rtlCompileOptions: Partial<CompileCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinitions[0].key,\n            rtlValue: rtlDefinitions.map(d => d.value) as Array<string | number>,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(pseudo, layer, media, support);\n      const [ltrCSS, rtlCSS] = compileCSS({\n        className,\n        media,\n        layer,\n        pseudo,\n        property,\n        support,\n        value: value as Array<string | number>,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRules, styleBucketName, ltrCSS, rtlCSS);\n    } else if (isObject(value)) {\n      if (isNestedSelector(property)) {\n        resolveStyleRules(\n          value as GriffelStyle,\n          pseudo + normalizeNestedProperty(property),\n          media,\n          layer,\n          support,\n          cssClassesMap,\n          cssRules,\n        );\n      } else if (isMediaQuerySelector(property)) {\n        const combinedMediaQuery = generateCombinedQuery(media, property.slice(6).trim());\n\n        resolveStyleRules(value as GriffelStyle, pseudo, combinedMediaQuery, layer, support, cssClassesMap, cssRules);\n      } else if (isLayerSelector(property)) {\n        const combinedLayerQuery = (layer ? `${layer}.` : '') + property.slice(6).trim();\n\n        resolveStyleRules(value as GriffelStyle, pseudo, media, combinedLayerQuery, support, cssClassesMap, cssRules);\n      } else if (isSupportQuerySelector(property)) {\n        const combinedSupportQuery = generateCombinedQuery(support, property.slice(9).trim());\n\n        resolveStyleRules(value as GriffelStyle, pseudo, media, layer, combinedSupportQuery, cssClassesMap, cssRules);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.error(`Please fix the unresolved style rule: \\n ${property} \\n ${JSON.stringify(value, null, 2)}\"`);\n        }\n      }\n    }\n  }\n\n  return [cssClassesMap, cssRules];\n}\n"],"names":["pushToClassesMap","classesMap","propertyKey","ltrClassname","rtlClassname","pushToCSSRules","cssRules","styleBucketName","ltrCSS","rtlCSS","push","cssRule","bucket","resolveStyleRules","styles","pseudo","media","layer","support","cssClassesMap","rtlValue","property","UNSUPPORTED_CSS_PROPERTIES","hasOwnProperty","process","env","NODE_ENV","console","error","repeat","join","value","key","hashPropertyKey","className","hashClassName","toString","rtlDefinition","convertProperty","flippedInRtl","rtlClassName","undefined","rtlCompileOptions","rtlProperty","getStyleBucketName","compileCSS","animationNameValue","Array","isArray","animationNames","rtlAnimationNames","keyframeObject","keyframeCSS","compileKeyframeRule","rtlKeyframeCSS","convert","animationName","HASH_PREFIX","hashString","rtlAnimationName","keyframeRules","compileKeyframesCSS","rtlKeyframeRules","i","length","warn","map","v","rtlDefinitions","rtlPropertyConsistent","some","d","isObject","isNestedSelector","normalizeNestedProperty","isMediaQuerySelector","combinedMediaQuery","generateCombinedQuery","slice","trim","isLayerSelector","combinedLayerQuery","isSupportQuerySelector","combinedSupportQuery","JSON","stringify"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/runtime/resolveStyleRules.d.ts b/node_modules/@griffel/core/runtime/resolveStyleRules.d.ts
index e98d49b..d511421 100644
--- a/node_modules/@griffel/core/runtime/resolveStyleRules.d.ts
+++ b/node_modules/@griffel/core/runtime/resolveStyleRules.d.ts
@@ -1,7 +1,7 @@
-import { GriffelStyle, CSSClassesMap, CSSRulesByBucket } from '../types';
+import { GriffelStyle, CSSClassesMap, CSSRuleData } from '../types';
 /**
  * Transforms input styles to classes maps & CSS rules.
  *
  * @internal
  */
-export declare function resolveStyleRules(styles: GriffelStyle, pseudo?: string, media?: string, layer?: string, support?: string, cssClassesMap?: CSSClassesMap, cssRulesByBucket?: CSSRulesByBucket, rtlValue?: string): [CSSClassesMap, CSSRulesByBucket];
+export declare function resolveStyleRules(styles: GriffelStyle, pseudo?: string, media?: string, layer?: string, support?: string, cssClassesMap?: CSSClassesMap, cssRules?: CSSRuleData[], rtlValue?: string): [CSSClassesMap, CSSRuleData[]];
diff --git a/node_modules/@griffel/core/runtime/resolveStyleRules.esm.js b/node_modules/@griffel/core/runtime/resolveStyleRules.esm.js
index e83833f..c632d65 100644
--- a/node_modules/@griffel/core/runtime/resolveStyleRules.esm.js
+++ b/node_modules/@griffel/core/runtime/resolveStyleRules.esm.js
@@ -18,12 +18,17 @@ function pushToClassesMap(classesMap, propertyKey, ltrClassname, rtlClassname) {
   classesMap[propertyKey] = rtlClassname ? [ltrClassname, rtlClassname] : ltrClassname;
 }
 
-function pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS) {
-  cssRulesByBucket[styleBucketName] = cssRulesByBucket[styleBucketName] || [];
-  cssRulesByBucket[styleBucketName].push(ltrCSS);
+function pushToCSSRules(cssRules, styleBucketName, ltrCSS, rtlCSS) {
+  cssRules.push({
+    cssRule: ltrCSS,
+    bucket: styleBucketName
+  });
 
   if (rtlCSS) {
-    cssRulesByBucket[styleBucketName].push(rtlCSS);
+    cssRules.push({
+      cssRule: rtlCSS,
+      bucket: styleBucketName
+    });
   }
 }
 /**
@@ -33,7 +38,7 @@ function pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS) {
  */
 
 
-function resolveStyleRules(styles, pseudo = '', media = '', layer = '', support = '', cssClassesMap = {}, cssRulesByBucket = {}, rtlValue) {
+function resolveStyleRules(styles, pseudo = '', media = '', layer = '', support = '', cssClassesMap = {}, cssRules = [], rtlValue) {
   // eslint-disable-next-line guard-for-in
   for (const property in styles) {
     // eslint-disable-next-line no-prototype-builtins
@@ -91,7 +96,7 @@ function resolveStyleRules(styles, pseudo = '', media = '', layer = '', support
         value
       }, rtlCompileOptions));
       pushToClassesMap(cssClassesMap, key, className, rtlClassName);
-      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS);
+      pushToCSSRules(cssRules, styleBucketName, ltrCSS, rtlCSS);
     } else if (property === 'animationName') {
       const animationNameValue = Array.isArray(value) ? value : [value];
       const animationNames = [];
@@ -114,7 +119,7 @@ function resolveStyleRules(styles, pseudo = '', media = '', layer = '', support
         }
 
         for (let i = 0; i < keyframeRules.length; i++) {
-          pushToCSSRules(cssRulesByBucket, // keyframes styles should be inserted into own bucket
+          pushToCSSRules(cssRules, // keyframes styles should be inserted into own bucket
           'k', keyframeRules[i], rtlKeyframeRules[i]);
         }
 
@@ -124,7 +129,7 @@ function resolveStyleRules(styles, pseudo = '', media = '', layer = '', support
 
       resolveStyleRules({
         animationName: animationNames.join(', ')
-      }, pseudo, media, layer, support, cssClassesMap, cssRulesByBucket, rtlAnimationNames.join(', '));
+      }, pseudo, media, layer, support, cssClassesMap, cssRules, rtlAnimationNames.join(', '));
     } else if (Array.isArray(value)) {
       // not animationName property but array in the value => fallback values
       if (value.length === 0) {
@@ -184,19 +189,19 @@ function resolveStyleRules(styles, pseudo = '', media = '', layer = '', support
         value: value
       }, rtlCompileOptions));
       pushToClassesMap(cssClassesMap, key, className, rtlClassName);
-      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS);
+      pushToCSSRules(cssRules, styleBucketName, ltrCSS, rtlCSS);
     } else if (isObject(value)) {
       if (isNestedSelector(property)) {
-        resolveStyleRules(value, pseudo + normalizeNestedProperty(property), media, layer, support, cssClassesMap, cssRulesByBucket);
+        resolveStyleRules(value, pseudo + normalizeNestedProperty(property), media, layer, support, cssClassesMap, cssRules);
       } else if (isMediaQuerySelector(property)) {
         const combinedMediaQuery = generateCombinedQuery(media, property.slice(6).trim());
-        resolveStyleRules(value, pseudo, combinedMediaQuery, layer, support, cssClassesMap, cssRulesByBucket);
+        resolveStyleRules(value, pseudo, combinedMediaQuery, layer, support, cssClassesMap, cssRules);
       } else if (isLayerSelector(property)) {
         const combinedLayerQuery = (layer ? `${layer}.` : '') + property.slice(6).trim();
-        resolveStyleRules(value, pseudo, media, combinedLayerQuery, support, cssClassesMap, cssRulesByBucket);
+        resolveStyleRules(value, pseudo, media, combinedLayerQuery, support, cssClassesMap, cssRules);
       } else if (isSupportQuerySelector(property)) {
         const combinedSupportQuery = generateCombinedQuery(support, property.slice(9).trim());
-        resolveStyleRules(value, pseudo, media, layer, combinedSupportQuery, cssClassesMap, cssRulesByBucket);
+        resolveStyleRules(value, pseudo, media, layer, combinedSupportQuery, cssClassesMap, cssRules);
       } else {
         if (process.env.NODE_ENV !== 'production') {
           // eslint-disable-next-line no-console
@@ -206,7 +211,7 @@ function resolveStyleRules(styles, pseudo = '', media = '', layer = '', support
     }
   }
 
-  return [cssClassesMap, cssRulesByBucket];
+  return [cssClassesMap, cssRules];
 }
 
 export { resolveStyleRules };
diff --git a/node_modules/@griffel/core/runtime/resolveStyleRules.esm.js.map b/node_modules/@griffel/core/runtime/resolveStyleRules.esm.js.map
index ad4b3d7..5445f32 100644
--- a/node_modules/@griffel/core/runtime/resolveStyleRules.esm.js.map
+++ b/node_modules/@griffel/core/runtime/resolveStyleRules.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"resolveStyleRules.esm.js","sources":["../../../../packages/core/src/runtime/resolveStyleRules.ts"],"sourcesContent":["import hashString from '@emotion/hash';\nimport { convert, convertProperty } from 'rtl-css-js/core';\n\nimport { HASH_PREFIX } from '../constants';\nimport { GriffelStyle, CSSClassesMap, CSSRulesByBucket, StyleBucketName, GriffelAnimation } from '../types';\nimport { compileCSS, CompileCSSOptions } from './compileCSS';\nimport { compileKeyframeRule, compileKeyframesCSS } from './compileKeyframeCSS';\nimport { generateCombinedQuery } from './utils/generateCombinedMediaQuery';\nimport { isMediaQuerySelector } from './utils/isMediaQuerySelector';\nimport { isLayerSelector } from './utils/isLayerSelector';\nimport { isNestedSelector } from './utils/isNestedSelector';\nimport { isSupportQuerySelector } from './utils/isSupportQuerySelector';\nimport { normalizeNestedProperty } from './utils/normalizeNestedProperty';\nimport { isObject } from './utils/isObject';\nimport { getStyleBucketName } from './getStyleBucketName';\nimport { hashClassName } from './utils/hashClassName';\nimport { hashPropertyKey } from './utils/hashPropertyKey';\nimport { UNSUPPORTED_CSS_PROPERTIES } from '..';\n\nfunction pushToClassesMap(\n  classesMap: CSSClassesMap,\n  propertyKey: string,\n  ltrClassname: string,\n  rtlClassname: string | undefined,\n) {\n  classesMap[propertyKey] = rtlClassname ? [ltrClassname!, rtlClassname] : ltrClassname;\n}\n\nfunction pushToCSSRules(\n  cssRulesByBucket: CSSRulesByBucket,\n  styleBucketName: StyleBucketName,\n  ltrCSS: string,\n  rtlCSS: string | undefined,\n) {\n  cssRulesByBucket[styleBucketName] = cssRulesByBucket[styleBucketName] || [];\n  cssRulesByBucket[styleBucketName]!.push(ltrCSS);\n\n  if (rtlCSS) {\n    cssRulesByBucket[styleBucketName]!.push(rtlCSS);\n  }\n}\n\n/**\n * Transforms input styles to classes maps & CSS rules.\n *\n * @internal\n */\nexport function resolveStyleRules(\n  styles: GriffelStyle,\n  pseudo = '',\n  media = '',\n  layer = '',\n  support = '',\n  cssClassesMap: CSSClassesMap = {},\n  cssRulesByBucket: CSSRulesByBucket = {},\n  rtlValue?: string,\n): [CSSClassesMap, CSSRulesByBucket] {\n  // eslint-disable-next-line guard-for-in\n  for (const property in styles) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (UNSUPPORTED_CSS_PROPERTIES.hasOwnProperty(property)) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(\n          [\n            `@griffel/react: You are using unsupported shorthand CSS property \"${property}\". ` +\n              `Please check your \"makeStyles\" calls, there *should not* be following:`,\n            ' '.repeat(2) + `makeStyles({`,\n            ' '.repeat(4) + `[slot]: { ${property}: \"${styles[property as keyof GriffelStyle]}\" }`,\n            ' '.repeat(2) + `})`,\n            '',\n            'Learn why CSS shorthands are not supported: https://aka.ms/griffel-css-shorthands',\n          ].join('\\n'),\n        );\n      }\n      continue;\n    }\n\n    const value = styles[property as keyof GriffelStyle];\n\n    // eslint-disable-next-line eqeqeq\n    if (value == null) {\n      continue;\n    }\n\n    if (typeof value === 'string' || typeof value === 'number') {\n      // uniq key based on a hash of property & selector, used for merging later\n      const key = hashPropertyKey(pseudo, media, support, property);\n      const className = hashClassName({\n        media,\n        layer,\n        value: value.toString(),\n        support,\n        pseudo,\n        property,\n      });\n\n      const rtlDefinition = (rtlValue && { key: property, value: rtlValue }) || convertProperty(property, value);\n      const flippedInRtl = rtlDefinition.key !== property || rtlDefinition.value !== value;\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            value: rtlDefinition.value.toString(),\n            property: rtlDefinition.key,\n            pseudo,\n            media,\n            layer,\n            support,\n          })\n        : undefined;\n      const rtlCompileOptions: Partial<CompileCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinition.key,\n            rtlValue: rtlDefinition.value,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(pseudo, layer, media, support);\n      const [ltrCSS, rtlCSS] = compileCSS({\n        className,\n        media,\n        layer,\n        pseudo,\n        property,\n        support,\n        value,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS);\n    } else if (property === 'animationName') {\n      const animationNameValue = Array.isArray(value) ? (value as GriffelAnimation[]) : [value as GriffelAnimation];\n\n      const animationNames: string[] = [];\n      const rtlAnimationNames: string[] = [];\n\n      for (const keyframeObject of animationNameValue) {\n        const keyframeCSS = compileKeyframeRule(keyframeObject);\n        const rtlKeyframeCSS = compileKeyframeRule(convert(keyframeObject));\n\n        const animationName = HASH_PREFIX + hashString(keyframeCSS);\n        let rtlAnimationName: string;\n\n        const keyframeRules = compileKeyframesCSS(animationName, keyframeCSS);\n        let rtlKeyframeRules: string[] = [];\n\n        if (keyframeCSS === rtlKeyframeCSS) {\n          // If CSS for LTR & RTL are same we will re-use animationName from LTR to avoid duplication of rules in output\n          rtlAnimationName = animationName;\n        } else {\n          rtlAnimationName = HASH_PREFIX + hashString(rtlKeyframeCSS);\n          rtlKeyframeRules = compileKeyframesCSS(rtlAnimationName, rtlKeyframeCSS);\n        }\n\n        for (let i = 0; i < keyframeRules.length; i++) {\n          pushToCSSRules(\n            cssRulesByBucket,\n            // keyframes styles should be inserted into own bucket\n            'k',\n            keyframeRules[i],\n            rtlKeyframeRules[i],\n          );\n        }\n\n        animationNames.push(animationName);\n        rtlAnimationNames.push(rtlAnimationName);\n      }\n\n      resolveStyleRules(\n        { animationName: animationNames.join(', ') },\n        pseudo,\n        media,\n        layer,\n        support,\n        cssClassesMap,\n        cssRulesByBucket,\n        rtlAnimationNames.join(', '),\n      );\n    } else if (Array.isArray(value)) {\n      // not animationName property but array in the value => fallback values\n      if (value.length === 0) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            `makeStyles(): An empty array was passed as input to \"${property}\", the property will be omitted in the styles.`,\n          );\n        }\n        continue;\n      }\n\n      const key = hashPropertyKey(pseudo, media, support, property);\n      const className = hashClassName({\n        media,\n        layer,\n        value: value.map(v => (v ?? '').toString()).join(';'),\n        support,\n        pseudo,\n        property,\n      });\n\n      const rtlDefinitions = value.map(v => convertProperty(property, v!));\n\n      const rtlPropertyConsistent = !rtlDefinitions.some(v => v.key !== rtlDefinitions[0].key);\n\n      if (!rtlPropertyConsistent) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            'makeStyles(): mixing CSS fallback values which result in multiple CSS properties in RTL is not supported.',\n          );\n        }\n        continue;\n      }\n\n      const flippedInRtl = rtlDefinitions[0].key !== property || rtlDefinitions.some((v, i) => v.value !== value[i]);\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            value: rtlDefinitions.map(v => (v?.value ?? '').toString()).join(';'),\n            property: rtlDefinitions[0].key,\n            pseudo,\n            layer,\n            media,\n            support,\n          })\n        : undefined;\n\n      const rtlCompileOptions: Partial<CompileCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinitions[0].key,\n            rtlValue: rtlDefinitions.map(d => d.value) as Array<string | number>,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(pseudo, layer, media, support);\n      const [ltrCSS, rtlCSS] = compileCSS({\n        className,\n        media,\n        layer,\n        pseudo,\n        property,\n        support,\n        value: value as Array<string | number>,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS);\n    } else if (isObject(value)) {\n      if (isNestedSelector(property)) {\n        resolveStyleRules(\n          value as GriffelStyle,\n          pseudo + normalizeNestedProperty(property),\n          media,\n          layer,\n          support,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isMediaQuerySelector(property)) {\n        const combinedMediaQuery = generateCombinedQuery(media, property.slice(6).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          pseudo,\n          combinedMediaQuery,\n          layer,\n          support,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isLayerSelector(property)) {\n        const combinedLayerQuery = (layer ? `${layer}.` : '') + property.slice(6).trim();\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          pseudo,\n          media,\n          combinedLayerQuery,\n          support,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isSupportQuerySelector(property)) {\n        const combinedSupportQuery = generateCombinedQuery(support, property.slice(9).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          pseudo,\n          media,\n          layer,\n          combinedSupportQuery,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.error(`Please fix the unresolved style rule: \\n ${property} \\n ${JSON.stringify(value, null, 2)}\"`);\n        }\n      }\n    }\n  }\n\n  return [cssClassesMap, cssRulesByBucket];\n}\n"],"names":["pushToClassesMap","classesMap","propertyKey","ltrClassname","rtlClassname","pushToCSSRules","cssRulesByBucket","styleBucketName","ltrCSS","rtlCSS","push","resolveStyleRules","styles","pseudo","media","layer","support","cssClassesMap","rtlValue","property","UNSUPPORTED_CSS_PROPERTIES","hasOwnProperty","process","env","NODE_ENV","console","error","repeat","join","value","key","hashPropertyKey","className","hashClassName","toString","rtlDefinition","convertProperty","flippedInRtl","rtlClassName","undefined","rtlCompileOptions","rtlProperty","getStyleBucketName","compileCSS","animationNameValue","Array","isArray","animationNames","rtlAnimationNames","keyframeObject","keyframeCSS","compileKeyframeRule","rtlKeyframeCSS","convert","animationName","HASH_PREFIX","hashString","rtlAnimationName","keyframeRules","compileKeyframesCSS","rtlKeyframeRules","i","length","warn","map","v","rtlDefinitions","rtlPropertyConsistent","some","d","isObject","isNestedSelector","normalizeNestedProperty","isMediaQuerySelector","combinedMediaQuery","generateCombinedQuery","slice","trim","isLayerSelector","combinedLayerQuery","isSupportQuerySelector","combinedSupportQuery","JSON","stringify"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"resolveStyleRules.esm.js","sources":["../../../../packages/core/src/runtime/resolveStyleRules.ts"],"sourcesContent":["import hashString from '@emotion/hash';\nimport { convert, convertProperty } from 'rtl-css-js/core';\n\nimport { HASH_PREFIX } from '../constants';\nimport { GriffelStyle, CSSClassesMap, StyleBucketName, GriffelAnimation, CSSRuleData } from '../types';\nimport { compileCSS, CompileCSSOptions } from './compileCSS';\nimport { compileKeyframeRule, compileKeyframesCSS } from './compileKeyframeCSS';\nimport { generateCombinedQuery } from './utils/generateCombinedMediaQuery';\nimport { isMediaQuerySelector } from './utils/isMediaQuerySelector';\nimport { isLayerSelector } from './utils/isLayerSelector';\nimport { isNestedSelector } from './utils/isNestedSelector';\nimport { isSupportQuerySelector } from './utils/isSupportQuerySelector';\nimport { normalizeNestedProperty } from './utils/normalizeNestedProperty';\nimport { isObject } from './utils/isObject';\nimport { getStyleBucketName } from './getStyleBucketName';\nimport { hashClassName } from './utils/hashClassName';\nimport { hashPropertyKey } from './utils/hashPropertyKey';\nimport { UNSUPPORTED_CSS_PROPERTIES } from '..';\n\nfunction pushToClassesMap(\n  classesMap: CSSClassesMap,\n  propertyKey: string,\n  ltrClassname: string,\n  rtlClassname: string | undefined,\n) {\n  classesMap[propertyKey] = rtlClassname ? [ltrClassname!, rtlClassname] : ltrClassname;\n}\n\nfunction pushToCSSRules(\n  cssRules: CSSRuleData[],\n  styleBucketName: StyleBucketName,\n  ltrCSS: string,\n  rtlCSS: string | undefined,\n) {\n  cssRules.push({ cssRule: ltrCSS, bucket: styleBucketName });\n  if (rtlCSS) {\n    cssRules.push({ cssRule: rtlCSS, bucket: styleBucketName });\n  }\n}\n\n/**\n * Transforms input styles to classes maps & CSS rules.\n *\n * @internal\n */\nexport function resolveStyleRules(\n  styles: GriffelStyle,\n  pseudo = '',\n  media = '',\n  layer = '',\n  support = '',\n  cssClassesMap: CSSClassesMap = {},\n  cssRules: CSSRuleData[] = [],\n  rtlValue?: string,\n): [CSSClassesMap, CSSRuleData[]] {\n  // eslint-disable-next-line guard-for-in\n  for (const property in styles) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (UNSUPPORTED_CSS_PROPERTIES.hasOwnProperty(property)) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(\n          [\n            `@griffel/react: You are using unsupported shorthand CSS property \"${property}\". ` +\n              `Please check your \"makeStyles\" calls, there *should not* be following:`,\n            ' '.repeat(2) + `makeStyles({`,\n            ' '.repeat(4) + `[slot]: { ${property}: \"${styles[property as keyof GriffelStyle]}\" }`,\n            ' '.repeat(2) + `})`,\n            '',\n            'Learn why CSS shorthands are not supported: https://aka.ms/griffel-css-shorthands',\n          ].join('\\n'),\n        );\n      }\n      continue;\n    }\n\n    const value = styles[property as keyof GriffelStyle];\n\n    // eslint-disable-next-line eqeqeq\n    if (value == null) {\n      continue;\n    }\n\n    if (typeof value === 'string' || typeof value === 'number') {\n      // uniq key based on a hash of property & selector, used for merging later\n      const key = hashPropertyKey(pseudo, media, support, property);\n      const className = hashClassName({\n        media,\n        layer,\n        value: value.toString(),\n        support,\n        pseudo,\n        property,\n      });\n\n      const rtlDefinition = (rtlValue && { key: property, value: rtlValue }) || convertProperty(property, value);\n      const flippedInRtl = rtlDefinition.key !== property || rtlDefinition.value !== value;\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            value: rtlDefinition.value.toString(),\n            property: rtlDefinition.key,\n            pseudo,\n            media,\n            layer,\n            support,\n          })\n        : undefined;\n      const rtlCompileOptions: Partial<CompileCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinition.key,\n            rtlValue: rtlDefinition.value,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(pseudo, layer, media, support);\n      const [ltrCSS, rtlCSS] = compileCSS({\n        className,\n        media,\n        layer,\n        pseudo,\n        property,\n        support,\n        value,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRules, styleBucketName, ltrCSS, rtlCSS);\n    } else if (property === 'animationName') {\n      const animationNameValue = Array.isArray(value) ? (value as GriffelAnimation[]) : [value as GriffelAnimation];\n\n      const animationNames: string[] = [];\n      const rtlAnimationNames: string[] = [];\n\n      for (const keyframeObject of animationNameValue) {\n        const keyframeCSS = compileKeyframeRule(keyframeObject);\n        const rtlKeyframeCSS = compileKeyframeRule(convert(keyframeObject));\n\n        const animationName = HASH_PREFIX + hashString(keyframeCSS);\n        let rtlAnimationName: string;\n\n        const keyframeRules = compileKeyframesCSS(animationName, keyframeCSS);\n        let rtlKeyframeRules: string[] = [];\n\n        if (keyframeCSS === rtlKeyframeCSS) {\n          // If CSS for LTR & RTL are same we will re-use animationName from LTR to avoid duplication of rules in output\n          rtlAnimationName = animationName;\n        } else {\n          rtlAnimationName = HASH_PREFIX + hashString(rtlKeyframeCSS);\n          rtlKeyframeRules = compileKeyframesCSS(rtlAnimationName, rtlKeyframeCSS);\n        }\n\n        for (let i = 0; i < keyframeRules.length; i++) {\n          pushToCSSRules(\n            cssRules,\n            // keyframes styles should be inserted into own bucket\n            'k',\n            keyframeRules[i],\n            rtlKeyframeRules[i],\n          );\n        }\n\n        animationNames.push(animationName);\n        rtlAnimationNames.push(rtlAnimationName);\n      }\n\n      resolveStyleRules(\n        { animationName: animationNames.join(', ') },\n        pseudo,\n        media,\n        layer,\n        support,\n        cssClassesMap,\n        cssRules,\n        rtlAnimationNames.join(', '),\n      );\n    } else if (Array.isArray(value)) {\n      // not animationName property but array in the value => fallback values\n      if (value.length === 0) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            `makeStyles(): An empty array was passed as input to \"${property}\", the property will be omitted in the styles.`,\n          );\n        }\n        continue;\n      }\n\n      const key = hashPropertyKey(pseudo, media, support, property);\n      const className = hashClassName({\n        media,\n        layer,\n        value: value.map(v => (v ?? '').toString()).join(';'),\n        support,\n        pseudo,\n        property,\n      });\n\n      const rtlDefinitions = value.map(v => convertProperty(property, v!));\n\n      const rtlPropertyConsistent = !rtlDefinitions.some(v => v.key !== rtlDefinitions[0].key);\n\n      if (!rtlPropertyConsistent) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            'makeStyles(): mixing CSS fallback values which result in multiple CSS properties in RTL is not supported.',\n          );\n        }\n        continue;\n      }\n\n      const flippedInRtl = rtlDefinitions[0].key !== property || rtlDefinitions.some((v, i) => v.value !== value[i]);\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            value: rtlDefinitions.map(v => (v?.value ?? '').toString()).join(';'),\n            property: rtlDefinitions[0].key,\n            pseudo,\n            layer,\n            media,\n            support,\n          })\n        : undefined;\n\n      const rtlCompileOptions: Partial<CompileCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinitions[0].key,\n            rtlValue: rtlDefinitions.map(d => d.value) as Array<string | number>,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(pseudo, layer, media, support);\n      const [ltrCSS, rtlCSS] = compileCSS({\n        className,\n        media,\n        layer,\n        pseudo,\n        property,\n        support,\n        value: value as Array<string | number>,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRules, styleBucketName, ltrCSS, rtlCSS);\n    } else if (isObject(value)) {\n      if (isNestedSelector(property)) {\n        resolveStyleRules(\n          value as GriffelStyle,\n          pseudo + normalizeNestedProperty(property),\n          media,\n          layer,\n          support,\n          cssClassesMap,\n          cssRules,\n        );\n      } else if (isMediaQuerySelector(property)) {\n        const combinedMediaQuery = generateCombinedQuery(media, property.slice(6).trim());\n\n        resolveStyleRules(value as GriffelStyle, pseudo, combinedMediaQuery, layer, support, cssClassesMap, cssRules);\n      } else if (isLayerSelector(property)) {\n        const combinedLayerQuery = (layer ? `${layer}.` : '') + property.slice(6).trim();\n\n        resolveStyleRules(value as GriffelStyle, pseudo, media, combinedLayerQuery, support, cssClassesMap, cssRules);\n      } else if (isSupportQuerySelector(property)) {\n        const combinedSupportQuery = generateCombinedQuery(support, property.slice(9).trim());\n\n        resolveStyleRules(value as GriffelStyle, pseudo, media, layer, combinedSupportQuery, cssClassesMap, cssRules);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.error(`Please fix the unresolved style rule: \\n ${property} \\n ${JSON.stringify(value, null, 2)}\"`);\n        }\n      }\n    }\n  }\n\n  return [cssClassesMap, cssRules];\n}\n"],"names":["pushToClassesMap","classesMap","propertyKey","ltrClassname","rtlClassname","pushToCSSRules","cssRules","styleBucketName","ltrCSS","rtlCSS","push","cssRule","bucket","resolveStyleRules","styles","pseudo","media","layer","support","cssClassesMap","rtlValue","property","UNSUPPORTED_CSS_PROPERTIES","hasOwnProperty","process","env","NODE_ENV","console","error","repeat","join","value","key","hashPropertyKey","className","hashClassName","toString","rtlDefinition","convertProperty","flippedInRtl","rtlClassName","undefined","rtlCompileOptions","rtlProperty","getStyleBucketName","compileCSS","animationNameValue","Array","isArray","animationNames","rtlAnimationNames","keyframeObject","keyframeCSS","compileKeyframeRule","rtlKeyframeCSS","convert","animationName","HASH_PREFIX","hashString","rtlAnimationName","keyframeRules","compileKeyframesCSS","rtlKeyframeRules","i","length","warn","map","v","rtlDefinitions","rtlPropertyConsistent","some","d","isObject","isNestedSelector","normalizeNestedProperty","isMediaQuerySelector","combinedMediaQuery","generateCombinedQuery","slice","trim","isLayerSelector","combinedLayerQuery","isSupportQuerySelector","combinedSupportQuery","JSON","stringify"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/shorthands/flex.cjs.js b/node_modules/@griffel/core/shorthands/flex.cjs.js
new file mode 100644
index 0000000..be18cc4
--- /dev/null
+++ b/node_modules/@griffel/core/shorthands/flex.cjs.js
@@ -0,0 +1,120 @@
+'use strict';
+
+Object.defineProperty(exports, '__esModule', { value: true });
+
+const isUnit = value => typeof value === 'string' && /(\d+(\w+|%))/.test(value);
+
+const isUnitless = value => typeof value === 'number' && !Number.isNaN(value);
+
+const isInitial = value => value === 'initial';
+
+const isAuto = value => value === 'auto';
+
+const isNone = value => value === 'none';
+
+const widthReservedKeys = ['content', 'fit-content', 'max-content', 'min-content'];
+
+const isWidth = value => widthReservedKeys.some(key => value === key) || isUnit(value);
+/**
+ * A function that implements CSS spec conformant expansion for "flex".
+ *
+ * @example
+ *   flex('auto')
+ *   flex(1, '2.5rem')
+ *   flex(0, 0, 'auto')
+ *
+ * @see https://developer.mozilla.org/en-US/docs/Web/CSS/flex
+ */
+
+
+function flex(...values) {
+  const isOneValueSyntax = values.length === 1;
+  const isTwoValueSyntax = values.length === 2;
+  const isThreeValueSyntax = values.length === 3;
+
+  if (isOneValueSyntax) {
+    const [firstValue] = values;
+
+    if (isInitial(firstValue)) {
+      return {
+        flexGrow: 0,
+        flexShrink: 1,
+        flexBasis: 'auto'
+      };
+    }
+
+    if (isAuto(firstValue)) {
+      return {
+        flexGrow: 1,
+        flexShrink: 1,
+        flexBasis: 'auto'
+      };
+    }
+
+    if (isNone(firstValue)) {
+      return {
+        flexGrow: 0,
+        flexShrink: 0,
+        flexBasis: 'auto'
+      };
+    }
+
+    if (isUnitless(firstValue)) {
+      return {
+        flexGrow: firstValue,
+        flexShrink: 1,
+        flexBasis: 0
+      };
+    }
+
+    if (isWidth(firstValue)) {
+      return {
+        flexGrow: 1,
+        flexShrink: 1,
+        flexBasis: firstValue
+      };
+    }
+  }
+
+  if (isTwoValueSyntax) {
+    const [firstValue, secondValue] = values;
+
+    if (isUnitless(secondValue)) {
+      return {
+        flexGrow: firstValue,
+        flexShrink: secondValue,
+        flexBasis: 0
+      };
+    }
+
+    if (isWidth(secondValue)) {
+      return {
+        flexGrow: firstValue,
+        flexShrink: 1,
+        flexBasis: secondValue
+      };
+    }
+  }
+
+  if (isThreeValueSyntax) {
+    const [firstValue, secondValue, thirdValue] = values;
+
+    if (isUnitless(firstValue) && isUnitless(secondValue) && (isAuto(thirdValue) || isWidth(thirdValue))) {
+      return {
+        flexGrow: firstValue,
+        flexShrink: secondValue,
+        flexBasis: thirdValue
+      };
+    }
+  }
+
+  if (process.env.NODE_ENV !== 'production') {
+    // eslint-disable-next-line no-console
+    console.error(`The value passed to shorthands.flex did not match any flex property specs. The CSS styles were not generated. Please, check the flex documentation.`);
+  }
+
+  return {};
+}
+
+exports.flex = flex;
+//# sourceMappingURL=flex.cjs.js.map
diff --git a/node_modules/@griffel/core/shorthands/flex.cjs.js.map b/node_modules/@griffel/core/shorthands/flex.cjs.js.map
new file mode 100644
index 0000000..9a3f0aa
--- /dev/null
+++ b/node_modules/@griffel/core/shorthands/flex.cjs.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"flex.cjs.js","sources":["../../../../packages/core/src/shorthands/flex.ts"],"sourcesContent":["import * as CSS from 'csstype';\nimport type { GriffelStylesStrictCSSObject } from '../types';\nimport { FlexInput } from './types';\n\ntype FlexStyle = Pick<GriffelStylesStrictCSSObject, 'flexGrow' | 'flexShrink' | 'flexBasis'>;\n\nconst isUnit = (value: CSS.Property.Flex | undefined) => typeof value === 'string' && /(\\d+(\\w+|%))/.test(value);\n\nconst isUnitless = (value: CSS.Property.Flex | undefined) => typeof value === 'number' && !Number.isNaN(value);\n\nconst isInitial = (value: CSS.Property.Flex | undefined) => value === 'initial';\n\nconst isAuto = (value: CSS.Property.Flex | undefined) => value === 'auto';\n\nconst isNone = (value: CSS.Property.Flex | undefined) => value === 'none';\n\nconst widthReservedKeys = ['content', 'fit-content', 'max-content', 'min-content'] as const;\ntype ReservedKeys = typeof widthReservedKeys[number];\ntype Width = ReservedKeys | string;\nconst isWidth = (value: CSS.Property.Flex | undefined) => widthReservedKeys.some(key => value === key) || isUnit(value);\n\n/**\n * A function that implements CSS spec conformant expansion for \"flex\".\n *\n * @example\n *   flex('auto')\n *   flex(1, '2.5rem')\n *   flex(0, 0, 'auto')\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/flex\n */\nexport function flex(...values: FlexInput): FlexStyle {\n  const isOneValueSyntax = values.length === 1;\n  const isTwoValueSyntax = values.length === 2;\n  const isThreeValueSyntax = values.length === 3;\n\n  if (isOneValueSyntax) {\n    const [firstValue] = values;\n\n    if (isInitial(firstValue)) {\n      return {\n        flexGrow: 0,\n        flexShrink: 1,\n        flexBasis: 'auto',\n      };\n    }\n\n    if (isAuto(firstValue)) {\n      return {\n        flexGrow: 1,\n        flexShrink: 1,\n        flexBasis: 'auto',\n      };\n    }\n\n    if (isNone(firstValue)) {\n      return {\n        flexGrow: 0,\n        flexShrink: 0,\n        flexBasis: 'auto',\n      };\n    }\n\n    if (isUnitless(firstValue)) {\n      return {\n        flexGrow: firstValue as number,\n        flexShrink: 1,\n        flexBasis: 0,\n      };\n    }\n\n    if (isWidth(firstValue)) {\n      return {\n        flexGrow: 1,\n        flexShrink: 1,\n        flexBasis: firstValue as Width,\n      };\n    }\n  }\n\n  if (isTwoValueSyntax) {\n    const [firstValue, secondValue] = values;\n\n    if (isUnitless(secondValue)) {\n      return {\n        flexGrow: firstValue,\n        flexShrink: secondValue,\n        flexBasis: 0,\n      };\n    }\n\n    if (isWidth(secondValue)) {\n      return {\n        flexGrow: firstValue,\n        flexShrink: 1,\n        flexBasis: secondValue as Width,\n      };\n    }\n  }\n\n  if (isThreeValueSyntax) {\n    const [firstValue, secondValue, thirdValue] = values;\n\n    if (isUnitless(firstValue) && isUnitless(secondValue) && (isAuto(thirdValue) || isWidth(thirdValue))) {\n      return {\n        flexGrow: firstValue,\n        flexShrink: secondValue,\n        flexBasis: thirdValue as Width,\n      };\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line no-console\n    console.error(\n      `The value passed to shorthands.flex did not match any flex property specs. The CSS styles were not generated. Please, check the flex documentation.`,\n    );\n  }\n  return {};\n}\n"],"names":["isUnit","value","test","isUnitless","Number","isNaN","isInitial","isAuto","isNone","widthReservedKeys","isWidth","some","key","flex","values","isOneValueSyntax","length","isTwoValueSyntax","isThreeValueSyntax","firstValue","flexGrow","flexShrink","flexBasis","secondValue","thirdValue","process","env","NODE_ENV","console","error"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/shorthands/flex.d.ts b/node_modules/@griffel/core/shorthands/flex.d.ts
new file mode 100644
index 0000000..a96e739
--- /dev/null
+++ b/node_modules/@griffel/core/shorthands/flex.d.ts
@@ -0,0 +1,15 @@
+import type { GriffelStylesStrictCSSObject } from '../types';
+import { FlexInput } from './types';
+declare type FlexStyle = Pick<GriffelStylesStrictCSSObject, 'flexGrow' | 'flexShrink' | 'flexBasis'>;
+/**
+ * A function that implements CSS spec conformant expansion for "flex".
+ *
+ * @example
+ *   flex('auto')
+ *   flex(1, '2.5rem')
+ *   flex(0, 0, 'auto')
+ *
+ * @see https://developer.mozilla.org/en-US/docs/Web/CSS/flex
+ */
+export declare function flex(...values: FlexInput): FlexStyle;
+export {};
diff --git a/node_modules/@griffel/core/shorthands/flex.esm.js b/node_modules/@griffel/core/shorthands/flex.esm.js
new file mode 100644
index 0000000..8e76674
--- /dev/null
+++ b/node_modules/@griffel/core/shorthands/flex.esm.js
@@ -0,0 +1,116 @@
+const isUnit = value => typeof value === 'string' && /(\d+(\w+|%))/.test(value);
+
+const isUnitless = value => typeof value === 'number' && !Number.isNaN(value);
+
+const isInitial = value => value === 'initial';
+
+const isAuto = value => value === 'auto';
+
+const isNone = value => value === 'none';
+
+const widthReservedKeys = ['content', 'fit-content', 'max-content', 'min-content'];
+
+const isWidth = value => widthReservedKeys.some(key => value === key) || isUnit(value);
+/**
+ * A function that implements CSS spec conformant expansion for "flex".
+ *
+ * @example
+ *   flex('auto')
+ *   flex(1, '2.5rem')
+ *   flex(0, 0, 'auto')
+ *
+ * @see https://developer.mozilla.org/en-US/docs/Web/CSS/flex
+ */
+
+
+function flex(...values) {
+  const isOneValueSyntax = values.length === 1;
+  const isTwoValueSyntax = values.length === 2;
+  const isThreeValueSyntax = values.length === 3;
+
+  if (isOneValueSyntax) {
+    const [firstValue] = values;
+
+    if (isInitial(firstValue)) {
+      return {
+        flexGrow: 0,
+        flexShrink: 1,
+        flexBasis: 'auto'
+      };
+    }
+
+    if (isAuto(firstValue)) {
+      return {
+        flexGrow: 1,
+        flexShrink: 1,
+        flexBasis: 'auto'
+      };
+    }
+
+    if (isNone(firstValue)) {
+      return {
+        flexGrow: 0,
+        flexShrink: 0,
+        flexBasis: 'auto'
+      };
+    }
+
+    if (isUnitless(firstValue)) {
+      return {
+        flexGrow: firstValue,
+        flexShrink: 1,
+        flexBasis: 0
+      };
+    }
+
+    if (isWidth(firstValue)) {
+      return {
+        flexGrow: 1,
+        flexShrink: 1,
+        flexBasis: firstValue
+      };
+    }
+  }
+
+  if (isTwoValueSyntax) {
+    const [firstValue, secondValue] = values;
+
+    if (isUnitless(secondValue)) {
+      return {
+        flexGrow: firstValue,
+        flexShrink: secondValue,
+        flexBasis: 0
+      };
+    }
+
+    if (isWidth(secondValue)) {
+      return {
+        flexGrow: firstValue,
+        flexShrink: 1,
+        flexBasis: secondValue
+      };
+    }
+  }
+
+  if (isThreeValueSyntax) {
+    const [firstValue, secondValue, thirdValue] = values;
+
+    if (isUnitless(firstValue) && isUnitless(secondValue) && (isAuto(thirdValue) || isWidth(thirdValue))) {
+      return {
+        flexGrow: firstValue,
+        flexShrink: secondValue,
+        flexBasis: thirdValue
+      };
+    }
+  }
+
+  if (process.env.NODE_ENV !== 'production') {
+    // eslint-disable-next-line no-console
+    console.error(`The value passed to shorthands.flex did not match any flex property specs. The CSS styles were not generated. Please, check the flex documentation.`);
+  }
+
+  return {};
+}
+
+export { flex };
+//# sourceMappingURL=flex.esm.js.map
diff --git a/node_modules/@griffel/core/shorthands/flex.esm.js.map b/node_modules/@griffel/core/shorthands/flex.esm.js.map
new file mode 100644
index 0000000..94d1d3a
--- /dev/null
+++ b/node_modules/@griffel/core/shorthands/flex.esm.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"flex.esm.js","sources":["../../../../packages/core/src/shorthands/flex.ts"],"sourcesContent":["import * as CSS from 'csstype';\nimport type { GriffelStylesStrictCSSObject } from '../types';\nimport { FlexInput } from './types';\n\ntype FlexStyle = Pick<GriffelStylesStrictCSSObject, 'flexGrow' | 'flexShrink' | 'flexBasis'>;\n\nconst isUnit = (value: CSS.Property.Flex | undefined) => typeof value === 'string' && /(\\d+(\\w+|%))/.test(value);\n\nconst isUnitless = (value: CSS.Property.Flex | undefined) => typeof value === 'number' && !Number.isNaN(value);\n\nconst isInitial = (value: CSS.Property.Flex | undefined) => value === 'initial';\n\nconst isAuto = (value: CSS.Property.Flex | undefined) => value === 'auto';\n\nconst isNone = (value: CSS.Property.Flex | undefined) => value === 'none';\n\nconst widthReservedKeys = ['content', 'fit-content', 'max-content', 'min-content'] as const;\ntype ReservedKeys = typeof widthReservedKeys[number];\ntype Width = ReservedKeys | string;\nconst isWidth = (value: CSS.Property.Flex | undefined) => widthReservedKeys.some(key => value === key) || isUnit(value);\n\n/**\n * A function that implements CSS spec conformant expansion for \"flex\".\n *\n * @example\n *   flex('auto')\n *   flex(1, '2.5rem')\n *   flex(0, 0, 'auto')\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/flex\n */\nexport function flex(...values: FlexInput): FlexStyle {\n  const isOneValueSyntax = values.length === 1;\n  const isTwoValueSyntax = values.length === 2;\n  const isThreeValueSyntax = values.length === 3;\n\n  if (isOneValueSyntax) {\n    const [firstValue] = values;\n\n    if (isInitial(firstValue)) {\n      return {\n        flexGrow: 0,\n        flexShrink: 1,\n        flexBasis: 'auto',\n      };\n    }\n\n    if (isAuto(firstValue)) {\n      return {\n        flexGrow: 1,\n        flexShrink: 1,\n        flexBasis: 'auto',\n      };\n    }\n\n    if (isNone(firstValue)) {\n      return {\n        flexGrow: 0,\n        flexShrink: 0,\n        flexBasis: 'auto',\n      };\n    }\n\n    if (isUnitless(firstValue)) {\n      return {\n        flexGrow: firstValue as number,\n        flexShrink: 1,\n        flexBasis: 0,\n      };\n    }\n\n    if (isWidth(firstValue)) {\n      return {\n        flexGrow: 1,\n        flexShrink: 1,\n        flexBasis: firstValue as Width,\n      };\n    }\n  }\n\n  if (isTwoValueSyntax) {\n    const [firstValue, secondValue] = values;\n\n    if (isUnitless(secondValue)) {\n      return {\n        flexGrow: firstValue,\n        flexShrink: secondValue,\n        flexBasis: 0,\n      };\n    }\n\n    if (isWidth(secondValue)) {\n      return {\n        flexGrow: firstValue,\n        flexShrink: 1,\n        flexBasis: secondValue as Width,\n      };\n    }\n  }\n\n  if (isThreeValueSyntax) {\n    const [firstValue, secondValue, thirdValue] = values;\n\n    if (isUnitless(firstValue) && isUnitless(secondValue) && (isAuto(thirdValue) || isWidth(thirdValue))) {\n      return {\n        flexGrow: firstValue,\n        flexShrink: secondValue,\n        flexBasis: thirdValue as Width,\n      };\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line no-console\n    console.error(\n      `The value passed to shorthands.flex did not match any flex property specs. The CSS styles were not generated. Please, check the flex documentation.`,\n    );\n  }\n  return {};\n}\n"],"names":["isUnit","value","test","isUnitless","Number","isNaN","isInitial","isAuto","isNone","widthReservedKeys","isWidth","some","key","flex","values","isOneValueSyntax","length","isTwoValueSyntax","isThreeValueSyntax","firstValue","flexGrow","flexShrink","flexBasis","secondValue","thirdValue","process","env","NODE_ENV","console","error"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/shorthands/index.d.ts b/node_modules/@griffel/core/shorthands/index.d.ts
index 230a57b..f88549d 100644
--- a/node_modules/@griffel/core/shorthands/index.d.ts
+++ b/node_modules/@griffel/core/shorthands/index.d.ts
@@ -7,6 +7,7 @@ export { borderColor } from './borderColor';
 export { borderStyle } from './borderStyle';
 export { borderRadius } from './borderRadius';
 export { borderWidth } from './borderWidth';
+export { flex } from './flex';
 export { gap } from './gap';
 export { margin } from './margin';
 export { padding } from './padding';
diff --git a/node_modules/@griffel/core/shorthands/types.d.ts b/node_modules/@griffel/core/shorthands/types.d.ts
index 46ee289..bf83b5c 100644
--- a/node_modules/@griffel/core/shorthands/types.d.ts
+++ b/node_modules/@griffel/core/shorthands/types.d.ts
@@ -12,3 +12,4 @@ export declare type MarginInput = ValueOrArray<CSS.Property.Margin<GriffelStyles
 export declare type OverflowInput = ValueOrArray<CSS.Property.Overflow>;
 export declare type PaddingInput = ValueOrArray<CSS.Property.Padding<GriffelStylesCSSValue>>;
 export declare type InsetInput = ValueOrArray<CSS.Property.Inset<GriffelStylesCSSValue>>;
+export declare type FlexInput = [CSS.Property.Flex, CSS.Property.Flex?, CSS.Property.Flex?];
diff --git a/node_modules/@griffel/core/types.d.ts b/node_modules/@griffel/core/types.d.ts
index 5a4aa25..4a48698 100644
--- a/node_modules/@griffel/core/types.d.ts
+++ b/node_modules/@griffel/core/types.d.ts
@@ -67,7 +67,7 @@ export interface GriffelRenderer {
     /**
      * @private
      */
-    insertCSSRules(cssRules: CSSRulesByBucket): void;
+    insertCSSRules(cssRules: CSSRuleData[]): void;
 }
 /**
  * Buckets under which we will group our stylesheets.
@@ -78,7 +78,10 @@ export declare type PropertyHash = string;
 export declare type CSSClasses = /* ltrClassName */ string | [/* ltrClassName */ string, /* rtlClassName */ string];
 export declare type CSSClassesMap = Record<PropertyHash, CSSClasses>;
 export declare type CSSClassesMapBySlot<Slots extends string | number> = Record<Slots, CSSClassesMap>;
-export declare type CSSRulesByBucket = Partial<Record<StyleBucketName, string[]>>;
+export declare type CSSRuleData = {
+    cssRule: string;
+    bucket: StyleBucketName;
+};
 export declare type StylesBySlots<Slots extends string | number> = Record<Slots, GriffelStyle>;
 export declare type LookupItem = [/* definitions */ CSSClassesMap, /* dir */ /* dir */ 'rtl' | 'ltr'];
 export {};
